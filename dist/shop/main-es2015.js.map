{"version":3,"sources":["./src/app/pages/order/order.component.ts","./src/app/pages/order/order.component.html","./src/app/parts/navigation/navigation.component.ts","./src/app/parts/navigation/navigation.component.html","./src/app/pages/product-edit/product-edit.component.ts","./src/app/pages/product-edit/product-edit.component.html","./src/environments/environment.ts","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/services/product.service.ts","./src/app/enum/Role.ts","./src/app/_interceptors/jwt-interceptor.service.ts","./src/app/_guards/auth.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/enum/CategoryType.ts","./src/app/app.module.ts","./src/app/services/cart.service.ts","./src/app/pages/card/card.component.ts","./src/app/pages/card/card.component.html","./src/app/pages/user-edit/user-detail.component.ts","./src/app/pages/user-edit/user-detail.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/models/productInfo.ts","./src/app/pages/product-list/product.list.component.ts","./src/app/pages/product-list/product.list.component.html","./src/app/services/order.service.ts","./src/app/pages/order-detail/order-detail.component.ts","./src/app/pages/order-detail/order-detail.component.html","./src/app/pages/signup/signup.component.ts","./src/app/pages/signup/signup.component.html","./src/app/enum/ProductStatus.ts","./src/app/services/user.service.ts","./src/app/parts/pagination/pagination.component.ts","./src/app/parts/pagination/pagination.component.html","./src/app/pages/cart/cart.component.ts","./src/app/pages/cart/cart.component.html","./src/app/enum/OrderStatus.ts","./src/app/models/ProductInOrder.ts","./src/app/app-routing.module.ts","./src/app/models/User.ts","./src/app/pages/product-detail/detail.component.ts","./src/app/pages/product-detail/detail.component.html","./src/app/_interceptors/error-interceptor.service.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {OrderService} from \"../../services/order.service\";\nimport {Order} from \"../../models/Order\";\nimport {OrderStatus} from \"../../enum/OrderStatus\";\nimport {UserService} from \"../../services/user.service\";\nimport {JwtResponse} from \"../../response/JwtResponse\";\nimport {Subscription} from \"rxjs\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n    selector: 'app-order',\n    templateUrl: './order.component.html',\n    styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit, OnDestroy {\n\n    page: any;\n    OrderStatus = OrderStatus;\n    currentUser: JwtResponse;\n    Role = Role;\n    constructor(private httpClient: HttpClient,\n                private orderService: OrderService,\n                private userService: UserService,\n                private route: ActivatedRoute\n    ) {\n    }\n\n    querySub: Subscription;\n\n    ngOnInit() {\n        this.currentUser = this.userService.currentUserValue;\n        this.querySub = this.route.queryParams.subscribe(() => {\n            this.update();\n        });\n\n    }\n\n    update() {\n        let nextPage = 1;\n        let size = 10;\n        if (this.route.snapshot.queryParamMap.get('page')) {\n            nextPage = +this.route.snapshot.queryParamMap.get('page');\n            size = +this.route.snapshot.queryParamMap.get('size');\n        }\n        this.orderService.getPage(nextPage, size).subscribe(page => this.page = page, _ => {\n            console.log(\"Get Orde Failed\")\n        });\n    }\n\n\n    cancel(order: Order) {\n        this.orderService.cancel(order.orderId).subscribe(res => {\n            if (res) {\n                order.orderStatus = res.orderStatus;\n            }\n        });\n    }\n\n    finish(order: Order) {\n        this.orderService.finish(order.orderId).subscribe(res => {\n            if (res) {\n                order.orderStatus = res.orderStatus;\n            }\n        })\n    }\n\n    ngOnDestroy(): void {\n        this.querySub.unsubscribe();\n    }\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Orders</h1>\n\n<table class=\"table table-striped text-center\">\n    <thead>\n    <tr>\n        <th scope=\"col\">Order #</th>\n        <th scope=\"col\">Customer Name</th>\n        <th scope=\"col\">Customer Email</th>\n        <th scope=\"col\">Customer phone</th>\n        <th scope=\"col\">Shipping Address</th>\n        <th scope=\"col\">Total</th>\n        <th scope=\"col\">Order Data</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n    <tbody>\n\n    <tr *ngFor=\"let order of page?.content\">\n        <th class=\"align-middle\" scope=\"row\">\n            {{order.orderId}}\n        </th>\n        <td class=\"align-middle\">{{order.buyerName}}</td>\n        <td class=\"align-middle\">{{order.buyerEmail}}</td>\n        <td class=\"align-middle\">{{order.buyerPhone}}</td>\n        <td class=\"align-middle\">{{order.buyerAddress}}</td>\n        <td class=\"align-middle\">{{order.orderAmount | currency}}</td>\n        <td class=\"align-middle\">{{order.createTime | date}}</td>\n        <td class=\"align-middle\">{{OrderStatus[order.orderStatus]}}</td>\n        <td class=\"align-middle\">\n            <a *ngIf=\"!(currentUser.role == Role.Customer && currentUser.name == order.buyerEmail)\"\n               style=\"display:\n            block\" href=\"\" routerLink=\"/order/{{order.orderId}}\">\n                Show</a>\n            <a *ngIf=\"order.orderStatus == 0\" style=\"display: block\" (click)=\"cancel(order)\" routerLink=\"./\">Cancel</a>\n            <a *ngIf=\"currentUser.role != Role.Customer && order.orderStatus == 0\"\n               style=\"display: block\"\n               (click)=\"finish(order)\"\n               routerLink=\"./\">\n                Finish</a>\n        </td>\n    </tr>\n    </tbody>\n</table>\n\n<app-pagination [currentPage]=\"page\"></app-pagination>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {Subscription} from \"rxjs\";\nimport {JwtResponse} from \"../../response/JwtResponse\";\nimport {Router} from \"@angular/router\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n    selector: 'app-navigation',\n    templateUrl: './navigation.component.html',\n    styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit, OnDestroy {\n\n\n    currentUserSubscription: Subscription;\n    name$;\n    name: string;\n    currentUser: JwtResponse;\n    root = '/';\n    Role = Role;\n\n    constructor(private userService: UserService,\n                private router: Router,\n    ) {\n\n    }\n\n\n    ngOnInit() {\n        this.name$ = this.userService.name$.subscribe(aName => this.name = aName);\n        this.currentUserSubscription = this.userService.currentUser.subscribe(user => {\n            this.currentUser = user;\n            if (!user || user.role == Role.Customer) {\n                this.root = '/';\n            } else {\n                this.root = '/seller';\n            }\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.currentUserSubscription.unsubscribe();\n        // this.name$.unsubscribe();\n    }\n\n    logout() {\n        this.userService.logout();\n        // this.router.navigate(['/login'], {queryParams: {logout: 'true'}} );\n    }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" [routerLink]=\"root\">\n        <img src=\"/assets/brand.png\" width=\"125\" class=\"d-inline-block align-top\" alt=\"\">\n    </a>\n\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n\n        <div class=\"navbar-nav\" *ngIf=\"!currentUser || currentUser.role == Role.Customer\">\n\n            <a class=\"nav-item nav-link \"\n               routerLink=\"/category/0\">\n                Meals\n            </a>\n            <a class=\"nav-item nav-link\"\n               routerLink=\"/category/1\">\n                Wraps\n            </a>\n            <a class=\"nav-item nav-link \"\n               routerLink=\"/category/2\">\n                Deserts\n            </a>\n            <a class=\"nav-item nav-link\"\n               routerLink=\"/category/3\">\n                Drink\n            </a>\n\n        </div>\n\n        <div class=\"navbar-nav ml-auto\">\n            <a *ngIf=\"!currentUser || currentUser.role == Role.Customer\"\n                    class=\"nav-item nav-link \" routerLink=\"/cart\">\n                <i class=\"fas fa-shopping-cart\"></i>\n                Cart\n            </a>\n\n            <ng-container *ngIf=\"currentUser; else noUser\">\n                <a class=\"nav-item nav-link \" routerLink=\"/order\">\n                    <i class=\"fas fa-list-ul\"></i>\n                    Orders\n                </a>\n                <a class=\"nav-item nav-link \" routerLink=\"/profile\">\n                    {{name}}\n                </a>\n                <a class=\"nav-item nav-link \" (click)=\"logout()\" routerLink=\"/login\" [queryParams]=\"{logout: true}\">\n                    Sign Out\n                </a>\n            </ng-container>\n            <ng-template #noUser>\n                <a class=\"nav-item nav-link \" routerLink=\"/login\">\n                    Sign In\n                </a>\n                <a class=\"nav-item nav-link \" routerLink=\"/register\">\n                    Sign Up\n                </a>\n            </ng-template>\n        </div>\n    </div>\n</nav>\n","import {AfterContentChecked, Component, OnInit} from '@angular/core';\nimport {ProductInfo} from \"../../models/productInfo\";\nimport {ProductService} from \"../../services/product.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-product-edit',\n    templateUrl: './product-edit.component.html',\n    styleUrls: ['./product-edit.component.css']\n})\nexport class ProductEditComponent implements OnInit, AfterContentChecked {\n\n    product = new ProductInfo();\n\n    constructor(private productService: ProductService,\n                private route: ActivatedRoute,\n                private router: Router) {\n    }\n\n    productId: string;\n    isEdit = false;\n\n    ngOnInit() {\n        this.productId = this.route.snapshot.paramMap.get('id');\n        if (this.productId) {\n            this.isEdit = true;\n            this.productService.getDetail(this.productId).subscribe(prod => this.product = prod);\n        }\n\n    }\n\n    update() {\n        this.productService.update(this.product).subscribe(prod => {\n                if (!prod) throw new Error();\n                this.router.navigate(['/seller']);\n            },\n            err => {\n            });\n\n    }\n\n    onSubmit() {\n        if (this.productId) {\n            this.update();\n        } else {\n            this.add();\n        }\n    }\n\n    add() {\n        this.productService.create(this.product).subscribe(prod => {\n                if (!prod) throw new Error;\n                this.router.navigate(['/']);\n            },\n            e => {\n            });\n    }\n\n    ngAfterContentChecked(): void {\n        console.log(this.product);\n    }\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Edit Product</h1>\n<div style=\"width:40%; margin: 25px auto\">\n    <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n        <!--Id-->\n        <div class=\"form-group\">\n            <label for=\"productId\">Code</label>\n            <input [readOnly]=\"isEdit\" [disabled]=\"isEdit\" [(ngModel)]=\"product.productId\" type=\"text\"\n                   class=\"form-control form-control-lg\" #productIdInput\n                   id=\"productId\" name=\"productId\" required #productId=\"ngModel\">\n            <div *ngIf=\"productIdInput.invalid && (productIdInput.dirty ||productIdInput.touched)\">\n                <div *ngIf=\"productIdInput.errors.required\">\n                    Name is required.\n                </div>\n            </div>\n        </div>\n        <!--Photo-->\n        <div class=\"form-group\">\n            <label>Photo Link</label>\n            <input [(ngModel)]=\"product.productIcon\" type=\"text\" class=\"form-control form-control-lg\" id=\"productIcon\"\n                   name=\"productIcon\" placeholder=\"Photo\">\n        </div>\n\n        <!--Name-->\n        <div class=\"form-group\">\n            <label>Name</label>\n            <input [(ngModel)]=\"product.productName\" type=\"text\" class=\"form-control form-control-lg\" id=\"productName\"\n                   #productName=\"ngModel\"\n                   name=\"productName\" placeholder=\"Name\" required>\n        </div>\n        <div *ngIf=\"productName.invalid && (productName.dirty ||productName.touched)\">\n            <div *ngIf=\"productName.errors.required\">\n                Name is required.\n            </div>\n        </div>\n\n        <!--Category-->\n        <div class=\"form-group\">\n            <label for=\"categoryType\">Category</label>\n            <select class=\"custom-select custom-select-lg \" id=\"categoryType\" name=\"categoryType\"\n                    [(ngModel)]=\"product.categoryType\"\n                    required>\n                <option [ngValue]=0>Books</option>\n                <option [ngValue]=1>Food</option>\n                <option [ngValue]=2>Clothes</option>\n                <option [ngValue]=3>Drink</option>\n            </select>\n        </div>\n\n        <!--Description-->\n        <div class=\"form-group\">\n            <label>Description</label>\n            <textarea class=\"form-control form-control-lg text-left\"\n                      id=\"productDescription\" name=\"productDescription\"\n                      placeholder=\"Description\" [(ngModel)]=\"product.productDescription\"></textarea>\n        </div>\n        <!--Price-->\n        <div class=\"form-group\">\n            <label for=\"productPrice\">Price</label>\n            <input class=\"form-control form-control-lg\"\n                   type=\"number\"\n                   id=\"productPrice\"\n                   name=\"productPrice\"\n                   #productPrice=\"ngModel\"\n                   [ngModel]=\"product.productPrice\" (ngModelChange)=\"product.productPrice=$event\"\n                   required>\n            <div *ngIf=\"productPrice.invalid && (productPrice.dirty ||productPrice.touched)\">\n                <div *ngIf=\"productPrice.errors.required\">\n                    Price is required.\n                </div>\n            </div>\n        </div>\n        <!--Stock-->\n        <div class=\"form-group\">\n            <label for=\"productStock\">Stock</label>\n            <input class=\"form-control form-control-lg\"\n                   type=\"number\"\n                   id=\"productStock\"\n                   name=\"productStock\"\n                   min=\"0\" #productStock=\"ngModel\"\n                   [(ngModel)]=\"product.productStock\"\n                   required>\n            <div *ngIf=\"productStock.invalid && (productStock.dirty ||productStock.touched)\">\n                <div *ngIf=\"productStock.errors.required\">\n                    Stock is required.\n                </div>\n            </div>\n        </div>\n        <!--Status-->\n        <div class=\"form-group\">\n            <label for=\"productStatus\">Status</label>\n            <select class=\"custom-select custom-select-lg \" id=\"productStatus\" name=\"productStatus\" required\n                    [(ngModel)]=\"product.productStatus\">\n                <option [ngValue]=0>Available</option>\n                <option [ngValue]=1>Unavailable</option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <button type=\"submit\" [disabled]=\"!form.form.valid\" class=\"btn btn-lg btn-primary btn-block\">Submit</button>\n        </div>\n    </form>\n\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\nexport const apiUrl = '//54.82.17.114:8888/api';\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    isInvalid: boolean;\n    isLogout: boolean;\n    submitted = false;\n    model: any = {\n        username: '',\n        password: '',\n        remembered:false\n    };\n\n    returnUrl = '/';\n\n    constructor(private userService: UserService,\n                private router: Router,\n                private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        let params = this.route.snapshot.queryParamMap;\n        this.isLogout = params.has('logout');\n        this.returnUrl = params.get('returnUrl');\n    }\n\n    onSubmit() {\n        this.submitted = true;\n        console.log(this.model);\n        this.userService.login(this.model).subscribe(\n            user => {\n                if (user) {\n                    if (user.role != Role.Customer) {\n\n                        this.returnUrl = '/seller';\n                    }\n\n                    this.router.navigateByUrl(this.returnUrl);\n                } else {\n                    this.isLogout = false;\n                    this.isInvalid = true;\n                }\n\n            }\n        );\n    }\n\n    fillLoginFields(u, p) {\n        this.model.username = u;\n        this.model.password = p;\n        this.onSubmit();\n    }\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Sign In</h1>\n<div style=\"width:40%; margin: 25px auto\">\n\n    <div class=\"alert alert-danger\" *ngIf=\"isInvalid\">\n        Invalid username and password.\n    </div>\n    <div class=\"alert alert-info\" *ngIf=\"isLogout\">\n        You have been logged out.\n    </div>\n\n\n    <form #form='ngForm' (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label>Email address</label>\n            <input type=\"text\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Enter email\" required autofocus\n                [(ngModel)]=\"model.username\" #email=\"ngModel\" autocomplete=\"email\">\n            <div [hidden]=\"email.valid || email.pristine\" class=\"alert alert-danger\">\n                Email is required\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label>Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" autocomplete=\"password\"\n                placeholder=\"Password\" required [(ngModel)]=\"model.password\" #password='ngModel'>\n            <div [hidden]=\"password.valid || password.pristine\" class=\"alert alert-danger\">\n                Password is required\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <div>\n                <div class=\"form-group form-check\">\n                    <input type=\"checkbox\" class=\"form-check-input\" id=\"remember_me\" name=\"remember-me\" [(ngModel)]=\"model.remembered\">\n                    <label class=\"form-check-label\" for=\"remember_me\"> Remember me </label>\n                </div>\n                <!-- <input type=\"checkbox\" id=\"remember_me\" name=\"remember-me\" [(ngModel)]=\"model.remembered\">\n                <label for=\"remember_me\" class=\"form-check-label\">  Remember me</label> -->\n\n            </div>\n            <label class=\"form-check-lable float-right mb-3\" >Don't have an account yet? &nbsp;<a class=\"float-right\" routerLink=\"/register\"\n                   > Sign Up</a> </label>\n        </div>\n\n\n        <div class=\"form-group\">\n            <button [disabled]=\"!form.form.valid\" type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign\n                In</button>\n        </div>\n    </form>\n\n</div>","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {ProductInfo} from '../models/productInfo';\nimport {apiUrl} from '../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProductService {\n\n    private productUrl = `${apiUrl}/product`;\n    private categoryUrl = `${apiUrl}/category`;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAllInPage(page: number, size: number): Observable<any> {\n        const url = `${this.productUrl}?page=${page}&size=${size}`;\n        return this.http.get(url)\n            .pipe(\n                // tap(_ => console.log(_)),\n            )\n    }\n\n    getCategoryInPage(categoryType: number, page: number, size: number): Observable<any> {\n        const url = `${this.categoryUrl}/${categoryType}?page=${page}&size=${size}`;\n        return this.http.get(url).pipe(\n            // tap(data => console.log(data))\n        );\n    }\n\n    getSearchInPage(productName: number, page: number, size: number): Observable<any> {\n        const url = `${this.categoryUrl}/search/${productName}?page=${page}&size=${size}`;\n        return this.http.get(url).pipe(\n            // tap(data => console.log(data))\n        );\n    }\n\n    getDetail(id: String): Observable<ProductInfo> {\n        const url = `${this.productUrl}/${id}`;\n        return this.http.get<ProductInfo>(url).pipe(\n            catchError(_ => {\n                console.log(\"Get Detail Failed\");\n                return of(new ProductInfo());\n            })\n        );\n    }\n\n    update(productInfo: ProductInfo): Observable<ProductInfo> {\n        const url = `${apiUrl}/seller/product/${productInfo.productId}/edit`;\n        return this.http.put<ProductInfo>(url, productInfo);\n    }\n\n    create(productInfo: ProductInfo): Observable<ProductInfo> {\n        const url = `${apiUrl}/seller/product/new`;\n        return this.http.post<ProductInfo>(url, productInfo);\n    }\n\n\n    delelte(productInfo: ProductInfo): Observable<any> {\n        const url = `${apiUrl}/seller/product/${productInfo.productId}/delete`;\n        return this.http.delete(url);\n    }\n\n\n    /**\n     * Handle Http operation that failed.\n     * Let the app continue.\n     * @param operation - name of the operation that failed\n     * @param result - optional value to return as the observable result\n     */\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            console.error(error); // log to console instead\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n}\n","export enum Role {\n    Customer = 'ROLE_CUSTOMER',\n    Employee = 'ROLE_EMPLOYEE',\n    Manager = 'ROLE_MANAGER'\n}\n","import {Injectable} from '@angular/core';\nimport {UserService} from \"../services/user.service\";\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JwtInterceptor implements HttpInterceptor {\n\n\n    constructor(private userService: UserService,\n    ) {\n\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        const currentUser = this.userService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `${currentUser.type} ${currentUser.token}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n        }\n        return next.handle(request);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {UserService} from \"../services/user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\n    constructor(\n        private router: Router,\n        private userService: UserService\n    ) {\n    }\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        const currentUser = this.userService.currentUserValue;\n        if (currentUser) {\n            // check if route is restricted by role\n            if (route.data.roles && route.data.roles.indexOf(currentUser.role) === -1) {\n                console.log(currentUser.role + \"fail in \" + route.data.roles);\n                // role not authorised so redirect to home page\n                this.router.navigate(['/']);\n                return false;\n            }\n            // authorised so return true\n            return true;\n        }\n\n        console.log(\"Need log in\");\n        // not logged in so redirect to login page with the return url{queryParams: {returnUrl: state.url}}\n        this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\n        return false;\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Hungerr';\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div class=\"container\">\n<app-navigation></app-navigation>\n<router-outlet></router-outlet>\n    <div class=\"container\">\n        <br>\n        <br>\n        <hr>\n        <div class=\"text-center\">\n            <a style=\"color: inherit\" href=\"https://github.com/Mr-PerFectt\"><i class=\"fab fa-github fa-3x\"></i></a>\n        </div>\n\n\n        <!--Copyright-->\n        <div class=\"footer-copyright py-3 text-center\">\n            © 2020 Copyright:\n            <a href=\"https://mrperfect.ml/\"> Mr. Perfect </a>\n        </div>\n    </div>\n</div>\n","export enum CategoryType {\n    \"Books\", \"Food\", \"Clothes\", \"Drink\"\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {NavigationComponent} from './parts/navigation/navigation.component';\nimport {CardComponent} from './pages/card/card.component';\nimport {PaginationComponent} from './parts/pagination/pagination.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {LoginComponent} from './pages/login/login.component';\nimport {SignupComponent} from './pages/signup/signup.component';\nimport {DetailComponent} from './pages/product-detail/detail.component';\nimport {FormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {CartComponent} from './pages/cart/cart.component';\nimport {CookieService} from \"ngx-cookie-service\";\nimport {ErrorInterceptor} from \"./_interceptors/error-interceptor.service\";\nimport {JwtInterceptor} from \"./_interceptors/jwt-interceptor.service\";\nimport {OrderComponent} from './pages/order/order.component';\nimport {OrderDetailComponent} from './pages/order-detail/order-detail.component';\nimport {ProductListComponent} from './pages/product-list/product.list.component';\nimport {UserDetailComponent} from './pages/user-edit/user-detail.component';\nimport {ProductEditComponent} from './pages/product-edit/product-edit.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n@NgModule({\n    declarations: [\n        AppComponent,\n        NavigationComponent,\n        CardComponent,\n        PaginationComponent,\n        LoginComponent,\n        SignupComponent,\n        DetailComponent,\n        CartComponent,\n        OrderComponent,\n        OrderDetailComponent,\n        ProductListComponent,\n        UserDetailComponent,\n        ProductEditComponent,\n\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        FormsModule,\n        HttpClientModule,\n        NgbModule\n\n    ],\n    providers: [CookieService,\n        {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n        {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {apiUrl} from '../../environments/environment';\nimport {CookieService} from 'ngx-cookie-service';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {UserService} from './user.service';\nimport {Cart} from '../models/Cart';\nimport {Item} from '../models/Item';\nimport {JwtResponse} from '../response/JwtResponse';\nimport {ProductInOrder} from '../models/ProductInOrder';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CartService {\n\n\n    private cartUrl = `${apiUrl}/cart`;\n\n    localMap = {};\n\n\n    private itemsSubject: BehaviorSubject<Item[]>;\n    private totalSubject: BehaviorSubject<number>;\n    public items: Observable<Item[]>;\n    public total: Observable<number>;\n\n\n    private currentUser: JwtResponse;\n\n    constructor(private http: HttpClient,\n                private cookieService: CookieService,\n                private userService: UserService) {\n        this.itemsSubject = new BehaviorSubject<Item[]>(null);\n        this.items = this.itemsSubject.asObservable();\n        this.totalSubject = new BehaviorSubject<number>(null);\n        this.total = this.totalSubject.asObservable();\n        this.userService.currentUser.subscribe(user => this.currentUser = user);\n\n\n    }\n\n    private getLocalCart(): ProductInOrder[] {\n        if (this.cookieService.check('cart')) {\n            this.localMap = JSON.parse(this.cookieService.get('cart'));\n            return Object.values(this.localMap);\n        } else {\n            this.localMap = {};\n            return [];\n        }\n    }\n\n    getCart(): Observable<ProductInOrder[]> {\n        const localCart = this.getLocalCart();\n        if (this.currentUser) {\n            if (localCart.length > 0) {\n                return this.http.post<Cart>(this.cartUrl, localCart).pipe(\n                    tap(_ => {\n                        this.clearLocalCart();\n                    }),\n                    map(cart => cart.products),\n                    catchError(_ => of([]))\n                );\n            } else {\n                return this.http.get<Cart>(this.cartUrl).pipe(\n                    map(cart => cart.products),\n                    catchError(_ => of([]))\n                );\n            }\n        } else {\n            return of(localCart);\n        }\n    }\n\n    addItem(productInOrder): Observable<boolean> {\n        if (!this.currentUser) {\n            if (this.cookieService.check('cart')) {\n                this.localMap = JSON.parse(this.cookieService.get('cart'));\n            }\n            if (!this.localMap[productInOrder.productId]) {\n                this.localMap[productInOrder.productId] = productInOrder;\n            } else {\n                this.localMap[productInOrder.productId].count += productInOrder.count;\n            }\n            this.cookieService.set('cart', JSON.stringify(this.localMap));\n            return of(true);\n        } else {\n            const url = `${this.cartUrl}/add`;\n            return this.http.post<boolean>(url, {\n                'quantity': productInOrder.count,\n                'productId': productInOrder.productId\n            });\n        }\n    }\n\n    update(productInOrder): Observable<ProductInOrder> {\n\n        if (this.currentUser) {\n            const url = `${this.cartUrl}/${productInOrder.productId}`;\n            return this.http.put<ProductInOrder>(url, productInOrder.count);\n        }\n    }\n\n\n    remove(productInOrder) {\n        if (!this.currentUser) {\n            delete this.localMap[productInOrder.productId];\n            return of(null);\n        } else {\n            const url = `${this.cartUrl}/${productInOrder.productId}`;\n            return this.http.delete(url).pipe( );\n        }\n    }\n\n\n    checkout(): Observable<any> {\n        const url = `${this.cartUrl}/checkout`;\n        return this.http.post(url, null).pipe();\n    }\n\n    storeLocalCart() {\n        this.cookieService.set('cart', JSON.stringify(this.localMap));\n    }\n\n    clearLocalCart() {\n        console.log('clear local cart');\n        this.cookieService.delete('cart');\n        this.localMap = {};\n    }\n\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\n// import {prod, products} from '../shared/mockData';\nimport {ProductService} from '../../services/product.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit, OnDestroy {\n\n\n  title: string;\n  page: any;\n  private paramSub: Subscription;\n  private querySub: Subscription;\n\n\n  constructor(private productService: ProductService,\n              private route: ActivatedRoute) {\n\n  }\n\n\n  ngOnInit() {\n    this.querySub = this.route.queryParams.subscribe(() => {\n      this.update();\n    });\n    this.paramSub = this.route.params.subscribe(() => {\n      this.update();\n    });\n\n  }\n\n  ngOnDestroy(): void {\n    this.querySub.unsubscribe();\n    this.paramSub.unsubscribe();\n  }\n\n  update() {\n    if (this.route.snapshot.queryParamMap.get('page')) {\n      const currentPage = +this.route.snapshot.queryParamMap.get('page');\n      const size = +this.route.snapshot.queryParamMap.get('size');\n      this.getProds(currentPage, size);\n    } else {\n      this.getProds();\n    }\n  }\n  getProds(page: number = 1, size: number = 3) {\n    if (this.route.snapshot.url.length == 1) {\n      this.productService.getAllInPage(+page, +size)\n        .subscribe(page => {\n          this.page = page;\n          this.title = 'Its Hard To Spell When Your Hungry !';\n        });\n    } else { //  /category/:id\n      const type = this.route.snapshot.url[1].path;\n      this.productService.getCategoryInPage(+type, page, size)\n        .subscribe(categoryPage => {\n          this.title = categoryPage.category;\n          this.page = categoryPage.page;\n        });\n    }\n\n  }\n\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">{{title}}</h1>\n<div class=\"row card-deck text-center\">\n  <div *ngFor=\"let productInfo of page?.content\" class=\"col-lg-4 \">\n    <div class=\"card mb-4\"  >\n      <img height=\"50%\" class=\"card-img-top\" src=\"{{productInfo.productIcon}}\" alt=\"{{productInfo.productName}}\">\n      <div class=\"card-body\">\n        <h4 class=\"card-title \">{{productInfo.productName}}</h4>\n        <div class=\"text-left\">\n          <p class=\"card-test\"><strong>Description: </strong>{{productInfo.productDescription}}</p>\n          <p class=\"card-text\"><strong>Price: </strong>{{productInfo.productPrice | currency:'INR'}}</p>\n          <p class=\"card-text\"><strong>Stock: </strong>{{productInfo.productStock}}</p>\n        </div>\n        <br>\n        <a routerLink=\"/product/{{productInfo.productId}}\" *ngIf=\"productInfo.productStatus == 0; else offBlock\"\n           class=\"btn btn-primary btn-lg\"\n        >Get It!</a>\n        <ng-template #offBlock><a class=\"btn btn-secondary btn-lg disabled\">Unavailable</a></ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n<app-pagination  [currentPage]=\"page\" ></app-pagination>\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {User} from \"../../models/User\";\nimport {Router} from \"@angular/router\";\nimport {Observable, Subject} from \"rxjs\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n    selector: 'app-user-detail',\n    templateUrl: './user-detail.component.html',\n    styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n\n\n\n\n    constructor(private userService: UserService,\n                private router: Router) {\n    }\n\n    user= new User();\n\n\n    ngOnInit() {\n        const account = this.userService.currentUserValue.account;\n\n        this.userService.get(account).subscribe( u => {\n            this.user = u;\n            this.user.password = '';\n        }, e => {\n\n        });\n    }\n\n    onSubmit() {\n        this.userService.update(this.user).subscribe(u => {\n            this.userService.nameTerms.next(u.name);\n            let url = '/';\n            if (this.user.role != Role.Customer) {\n                url = '/seller';\n            }\n            this.router.navigateByUrl(url);\n        }, _ => {})\n    }\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Edit Profiles</h1>\n<div style=\"width:40%; margin: 25px auto\" >\n  <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label><b>Email address</b></label>\n        <input readonly [value]=user?.email type=\"email\" class=\"form-control form-control-lg \" disabled id=\"email\"\n               name=\"email\" placeholder=\"Enter email\">\n    </div>\n    <div class=\"form-group\">\n      <label><b>Name</b></label>\n      <input [(ngModel)]=\"user.name\" type=\"text\" class=\"form-control form-control-lg\" id=\"name\" name=\"name\" placeholder=\"Your name\" required #name=\"ngModel\" autofocus>\n      <div  *ngIf=\"name.invalid && (name.dirty || name.touched)\">\n        <div *ngIf=\"name.errors.required\">\n          Name is required.\n        </div>\n        <div *ngIf=\"name.errors.minlength\">\n          Name must be at least 3 characters long.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Password</b></label>\n      <input  [(ngModel)]=\"user.password\" type=\"password\" class=\"form-control form-control-lg\" id=\"password\" name=\"password\" placeholder=\"Password\" minlength=\"3\" required #password=\"ngModel\">\n      <div  *ngIf=\"password.invalid && (password.dirty ||password.touched)\">\n        <div *ngIf=\"password.errors.required\">\n          Password is required.\n        </div>\n        <div *ngIf=\"password.errors.minlength\">\n          Password must be at least 3 characters long.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Phone</b></label>\n      <input [(ngModel)]=\"user.phone\" type=\"text\" class=\"form-control form-control-lg\" id=\"phone\" name=\"phone\" placeholder=\"Phone\" required #phone=\"ngModel\" >\n      <div  *ngIf=\"phone.invalid && (phone.dirty ||phone.touched)\">\n        <div *ngIf=\"phone.errors.required\">\n          Phone is required.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Address</b></label>\n      <input [(ngModel)]=\"user.address\" type=\"text\" class=\"form-control form-control-lg\" id=\"address\" name=\"address\" placeholder=\"Address\" required #address=\"ngModel\">\n      <div  *ngIf=\"address.invalid && (address.dirty ||address.touched)\">\n        <div *ngIf=\"address.errors.required\">\n          Address is required.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!form.form.valid\" >Update</button>\n    </div>\n  </form>\n</div>\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import {ProductInOrder} from \"./ProductInOrder\";\n\nexport class ProductInfo {\n    productId: string;\n    productName: string;\n    productPrice: number;\n    productStock: number;\n    productDescription: string;\n    productIcon: string;\n    productStatus: number; // 0: onsale 1: offsale\n    categoryType: number;\n    createTime: string;\n    updateTime: string;\n\n\n    constructor(productInOrder?: ProductInOrder) {\n        if (productInOrder) {\n            this.productId = productInOrder.productId;\n            this.productName = productInOrder.productName;\n            this.productPrice = productInOrder.productPrice;\n            this.productStock = productInOrder.productStock;\n            this.productDescription = productInOrder.productDescription;\n            this.productIcon = productInOrder.productIcon;\n            this.categoryType = productInOrder.categoryType;\n            this.productStatus = 0;\n        } else {\n            this.productId = '';\n            this.productName = '';\n            this.productPrice = 20;\n            this.productStock = 100;\n            this.productDescription = '';\n            this.productIcon = '';\n            this.categoryType = 0;\n            this.productStatus = 0;\n        }\n    }\n}\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {ProductService} from \"../../services/product.service\";\nimport {JwtResponse} from \"../../response/JwtResponse\";\nimport {Subscription} from \"rxjs\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {CategoryType} from \"../../enum/CategoryType\";\nimport {ProductStatus} from \"../../enum/ProductStatus\";\nimport {ProductInfo} from \"../../models/productInfo\";\nimport {Role} from \"../../enum/Role\";\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n    selector: 'app-product.list',\n    templateUrl: './product.list.component.html',\n    styleUrls: ['./product.list.component.css']\n})\n\nexport class ProductListComponent implements OnInit, OnDestroy {\n\n    closeResult = '';\n    product = new ProductInfo();\n    productId: string;\n    isEdit = false;\n\n    constructor(private userService: UserService,\n                private productService: ProductService,\n                private route: ActivatedRoute,\n                private router: Router,\n                \n                private modalService: NgbModal) {\n    }\n\n    Role = Role;\n    currentUser: JwtResponse;\n    page: any;\n    CategoryType = CategoryType;\n    ProductStatus = ProductStatus;\n    private querySub: Subscription;\n\n    ngOnInit() {\n        this.querySub = this.route.queryParams.subscribe(() => {\n            this.update();\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.querySub.unsubscribe();\n    }\n\n    update() {\n        if (this.route.snapshot.queryParamMap.get('page')) {\n            const currentPage = +this.route.snapshot.queryParamMap.get('page');\n            const size = +this.route.snapshot.queryParamMap.get('size');\n            this.getProds(currentPage, size);\n        } else {\n            this.getProds();\n        }\n    }\n\n    getProds(page: number = 1, size: number = 5) {\n        this.productService.getAllInPage(+page, +size)\n            .subscribe(page => {\n                this.page = page;\n            });\n\n    }\n\n\n    remove(productInfos: ProductInfo[], productInfo) {\n        this.productService.delelte(productInfo).subscribe(_ => {\n                productInfos = productInfos.filter(e => e.productId != productInfo);\n            },\n            err => {\n            });\n    }\n\n    open(content) {\n        this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n          this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n      }\n    \n      private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n          return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n          return 'by clicking on a backdrop';\n        } else {\n          return `with: ${reason}`;\n        }\n      }\n\n      onSubmit() {\n        if (this.productId) {\n            this.update();\n        } else {\n            this.add();\n        }\n    }\n\n    add() {\n        this.productService.create(this.product).subscribe(prod => {\n                if (!prod) throw new Error;\n                //this.router.navigate(['/']);\n            },\n            e => {\n            });\n    }\n\n\n}\n","<h1 align=\"center\" class=\"display-4 \">Products</h1>\n<a *ngIf=\"currentUser?.role == Role.Customer\" style=\"color: inherit\"\n   routerLink=\"/seller/product/new\" class=\"float-right mb-3\"><i class=\"fas fa-plus fa-2x\">Add</i>\n</a>\n<table id=\"table\" class=\"table table-striped text-center\" style=\"width:100%;\">\n    <thead>\n    <tr>\n        <th scope=\"col\">Photo</th>\n        <th scope=\"col\">Code</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Type</th>\n        <th scope=\"col\">Description</th>\n        <th scope=\"col\">Price</th>\n        <th scope=\"col\">Stock</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let productInfo of page?.content\">\n        <th class=\"align-middle\" scope=\"row\">\n            <img height=\"100px\" src=\"{{productInfo.productIcon}}\" alt=\"{{productInfo.productName}}\">\n        </th>\n        <td class=\"align-middle\">{{productInfo.productId}}</td>\n        <td class=\"align-middle\">{{productInfo.productName}}</td>\n        <td class=\"align-middle\">{{CategoryType[productInfo.categoryType]}}</td>\n        <td class=\"align-middle\">{{productInfo.productDescription}}</td>\n        <td class=\"align-middle\">{{productInfo.productPrice | currency}}</td>\n        <td class=\"align-middle\">{{productInfo.productStock}}</td>\n        <td class=\"align-middle\">{{ProductStatus[productInfo.productStatus]}}</td>\n        <td class=\"align-middle\">\n            <a style=\"display: block\" routerLink=\"/seller/product/{{productInfo.productId}}/edit\">\n                Edit</a>\n\n            <a *ngIf=\"currentUser?.role == Role.Customer\" style=\"display: block\"\n               (click)=\"remove(page.content, productInfo.productId)\" routerLink=\"./\">\n                Remove</a>\n        </td>\n\n    </tbody>\n</table>\n<app-pagination [currentPage]=\"page\"></app-pagination>\n\n<ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Add New Cuisine</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n        <!--Id-->\n        <div class=\"form-group\">\n            <label for=\"productId\">Code</label>\n            <input [readOnly]=\"isEdit\" [disabled]=\"isEdit\" [(ngModel)]=\"product.productId\" type=\"text\"\n                   class=\"form-control form-control-lg\" #productIdInput\n                   id=\"productId\" name=\"productId\" required #productId=\"ngModel\">\n            <div *ngIf=\"productIdInput.invalid && (productIdInput.dirty ||productIdInput.touched)\">\n                <div *ngIf=\"productIdInput.errors.required\">\n                    Name is required.\n                </div>\n            </div>\n        </div>\n        <!--Photo-->\n        <div class=\"form-group\">\n            <label>Photo Link</label>\n            <input [(ngModel)]=\"product.productIcon\" type=\"text\" class=\"form-control form-control-lg\" id=\"productIcon\"\n                   name=\"productIcon\" placeholder=\"Photo\">\n        </div>\n\n        <!--Name-->\n        <div class=\"form-group\">\n            <label>Name</label>\n            <input [(ngModel)]=\"product.productName\" type=\"text\" class=\"form-control form-control-lg\" id=\"productName\"\n                   #productName=\"ngModel\"\n                   name=\"productName\" placeholder=\"Name\" required>\n        </div>\n        <div *ngIf=\"productName.invalid && (productName.dirty ||productName.touched)\">\n            <div *ngIf=\"productName.errors.required\">\n                Name is required.\n            </div>\n        </div>\n\n        <!--Category-->\n        <div class=\"form-group\">\n            <label for=\"categoryType\">Category</label>\n            <select class=\"custom-select custom-select-lg \" id=\"categoryType\" name=\"categoryType\"\n                    [(ngModel)]=\"product.categoryType\"\n                    required>\n                <option [ngValue]=0>Meals</option>\n                <option [ngValue]=1>Wraps</option>\n                <option [ngValue]=2>Desert</option>\n                <option [ngValue]=3>Drink</option>\n            </select>\n        </div>\n\n        <!--Description-->\n        <div class=\"form-group\">\n            <label>Description</label>\n            <textarea class=\"form-control form-control-lg text-left\"\n                      id=\"productDescription\" name=\"productDescription\"\n                      placeholder=\"Description\" [(ngModel)]=\"product.productDescription\"></textarea>\n        </div>\n        <!--Price-->\n        <div class=\"form-group\">\n            <label for=\"productPrice\">Price</label>\n            <input class=\"form-control form-control-lg\"\n                   type=\"number\"\n                   id=\"productPrice\"\n                   name=\"productPrice\"\n                   #productPrice=\"ngModel\"\n                   [ngModel]=\"product.productPrice\" (ngModelChange)=\"product.productPrice=$event\"\n                   required>\n            <div *ngIf=\"productPrice.invalid && (productPrice.dirty ||productPrice.touched)\">\n                <div *ngIf=\"productPrice.errors.required\">\n                    Price is required.\n                </div>\n            </div>\n        </div>\n        <!--Stock-->\n        <div class=\"form-group\">\n            <label for=\"productStock\">Stock</label>\n            <input class=\"form-control form-control-lg\"\n                   type=\"number\"\n                   id=\"productStock\"\n                   name=\"productStock\"\n                   min=\"0\" #productStock=\"ngModel\"\n                   [(ngModel)]=\"product.productStock\"\n                   required>\n            <div *ngIf=\"productStock.invalid && (productStock.dirty ||productStock.touched)\">\n                <div *ngIf=\"productStock.errors.required\">\n                    Stock is required.\n                </div>\n            </div>\n        </div>\n        <!--Status-->\n        <div class=\"form-group\">\n            <label for=\"productStatus\">Status</label>\n            <select class=\"custom-select custom-select-lg \" id=\"productStatus\" name=\"productStatus\" required\n                    [(ngModel)]=\"product.productStatus\">\n                <option [ngValue]=0>Available</option>\n                <option [ngValue]=1>Unavailable</option>\n            </select>\n        </div>\n        \n        <div class=\"form-group\">\n            <button type=\"submit\" (click)=\"modal.close('Save click')\" [disabled]=\"!form.form.valid\" class=\"btn btn-lg btn-primary btn-block\">Submit</button>\n        </div>\n    </form>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Save</button>\n    </div>\n  </ng-template>\n  \n  <button class=\"btn btn-lg btn-outline-primary\" (click)=\"open(content)\">Save New Cuisine</button>\n  \n  <hr>\n  \n  <pre>{{ closeResult }}</pre>\n  \n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {catchError} from \"rxjs/operators\";\nimport {Observable, of} from \"rxjs\";\nimport {Order} from \"../models/Order\";\nimport {apiUrl} from \"../../environments/environment\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrderService {\n\n    private orderUrl = `${apiUrl}/order`;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getPage(page = 1, size = 10): Observable<any> {\n        return this.http.get(`${this.orderUrl}?page=${page}&size=${size}`).pipe();\n    }\n\n    show(id): Observable<Order> {\n        return this.http.get<Order>(`${this.orderUrl}/${id}`).pipe(\n            catchError(_ => of(null))\n        );\n    }\n\n    cancel(id): Observable<Order> {\n        return this.http.patch<Order>(`${this.orderUrl}/cancel/${id}`, null).pipe(\n            catchError(_ => of(null))\n        );\n    }\n\n    finish(id): Observable<Order> {\n        return this.http.patch<Order>(`${this.orderUrl}/finish/${id}`, null).pipe(\n            catchError(_ => of(null))\n        );\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {OrderService} from \"../../services/order.service\";\nimport {Order} from \"../../models/Order\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n    selector: 'app-order-detail',\n    templateUrl: './order-detail.component.html',\n    styleUrls: ['./order-detail.component.css']\n})\nexport class OrderDetailComponent implements OnInit {\n\n    constructor(private orderService: OrderService,\n                private route: ActivatedRoute) {\n    }\n\n    order$: Observable<Order>;\n\n    ngOnInit() {\n        // this.items$ = this.route.paramMap.pipe(\n        //     map(paramMap =>paramMap.get('id')),\n        //     switchMap((id:string) => this.orderService.show(id))\n        // )\n        this.order$ = this.orderService.show(this.route.snapshot.paramMap.get('id'));\n    }\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Order Detail</h1>\n<table class=\"table table-striped text-center\">\n    <thead>\n    <tr>\n        <th scope=\"col\">Photo</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Description</th>\n        <th scope=\"col\">Price</th>\n        <th scope=\"col\">Quantity</th>\n        <th scope=\"col\">Subtotal</th>\n\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let item of (order$ | async)?.products\">\n        <th class=\"align-middle\" scope=\"row\">\n            <a routerLink=\"/seller/product/{{item.productId}}/edit\"><img height=\"100px\" src=\"{{item.productIcon}}\"\n                                                                         alt=\"{{item.productName}}\"></a>\n        </th>\n        <td class=\"align-middle\"><a routerLink=\"/seller/product/{{item.productId}}/edit\">{{item.productName}}</a></td>\n        <td class=\"align-middle\">{{item.productDescription}}</td>\n        <td class=\"align-middle\">{{item.productPrice | currency}}</td>\n        <td class=\"align-middle\">{{item.count}}</td>\n        <td class=\"align-middle\">{{(item.productPrice * item.count | currency)}}</td>\n    </tr>\n    </tbody>\n</table>\n<h5 style=\"display: inline\" class=\"float-right\">Total: {{(order$ | async)?.orderAmount | currency}}</h5>\n","import {Component, OnInit} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {User} from \"../../models/User\";\nimport {UserService} from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  user: User;\n\n  constructor( private location: Location,\n               private userService: UserService,\n               private router: Router) {\n    this.user = new User();\n\n  }\n\n\n\n  ngOnInit() {\n\n\n  }\n  onSubmit() {\n    this.userService.signUp(this.user).subscribe(u => {\n      this.router.navigate(['/login']);\n    },\n        e => {});\n  }\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Sign Up</h1>\n<div style=\"width:40%; margin: 25px auto\" >\n  <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label><b>Email address</b></label>\n      <input [(ngModel)]=\"user.email\" type=\"email\" class=\"form-control form-control-lg\" id=\"email\" name=\"email\" placeholder=\"Enter email\" email required autofocus  #email=\"ngModel\">\n      <div  *ngIf=\"email.invalid && (email.dirty ||email.touched)\" >\n          <div *ngIf=\"email.errors.required\" >\n              Email is required.\n          </div>\n          <div *ngIf=\"email.errors.email\">\n              Invalid Email.\n          </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Name</b></label>\n      <input [(ngModel)]=\"user.name\" type=\"text\" class=\"form-control form-control-lg\" id=\"name\" name=\"name\" placeholder=\"Your name\" required #name=\"ngModel\">\n        <div  *ngIf=\"name.invalid && (name.dirty ||name.touched)\">\n            <div *ngIf=\"name.errors.required\">\n                Name is required.\n            </div>\n            <div *ngIf=\"name.errors.minlength\">\n                Name must be at least 3 characters long.\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Password</b></label>\n      <input  [(ngModel)]=\"user.password\" type=\"password\" class=\"form-control form-control-lg\" id=\"password\" name=\"password\" placeholder=\"Password\" minlength=\"3\" required #password=\"ngModel\">\n        <div  *ngIf=\"password.invalid && (password.dirty ||password.touched)\">\n            <div *ngIf=\"password.errors.required\">\n                Password is required.\n            </div>\n            <div *ngIf=\"password.errors.minlength\">\n                Password must be at least 3 characters long.\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Phone</b></label>\n      <input [(ngModel)]=\"user.phone\" type=\"text\" class=\"form-control form-control-lg\" id=\"phone\" name=\"phone\" placeholder=\"Phone\" required #phone=\"ngModel\" >\n        <div  *ngIf=\"phone.invalid && (phone.dirty ||phone.touched)\">\n            <div *ngIf=\"phone.errors.required\">\n                Phone is required.\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Address</b></label>\n      <input [(ngModel)]=\"user.address\" type=\"text\" class=\"form-control form-control-lg\" id=\"address\" name=\"address\" placeholder=\"Address\" required #address=\"ngModel\">\n        <div  *ngIf=\"address.invalid && (address.dirty ||address.touched)\">\n            <div *ngIf=\"address.errors.required\">\n                Address is required.\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n      <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!form.form.valid\" >Sign Up</button>\n    </div>\n  </form>\n</div>\n\n","export enum ProductStatus {\n    \"Available\", \"Unavailable\"\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {apiUrl} from '../../environments/environment';\nimport {BehaviorSubject, Observable, of, Subject} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport {JwtResponse} from '../response/JwtResponse';\nimport {CookieService} from 'ngx-cookie-service';\nimport {User} from \"../models/User\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n\n    private currentUserSubject: BehaviorSubject<JwtResponse>;\n    public currentUser: Observable<JwtResponse>;\n    public nameTerms = new Subject<string>();\n    public name$ = this.nameTerms.asObservable();\n    constructor(private http: HttpClient,\n                private cookieService: CookieService) {\n        const memo = localStorage.getItem('currentUser');\n        this.currentUserSubject = new BehaviorSubject<JwtResponse>(JSON.parse(memo));\n        this.currentUser = this.currentUserSubject.asObservable();\n        cookieService.set('currentUser', memo);\n    }\n\n    get currentUserValue() {\n        return this.currentUserSubject.value;\n    }\n\n\n    login(loginForm): Observable<JwtResponse> {\n        const url = `${apiUrl}/login`;\n        return this.http.post<JwtResponse>(url, loginForm).pipe(\n            tap(user => {\n                if (user && user.token) {\n                    this.cookieService.set('currentUser', JSON.stringify(user));\n                    if (loginForm.remembered) {\n                        localStorage.setItem('currentUser', JSON.stringify(user));\n                    }\n                    console.log((user.name));\n                    this.nameTerms.next(user.name);\n                    this.currentUserSubject.next(user);\n                    return user;\n                }\n            }),\n            catchError(this.handleError('Login Failed', null))\n        );\n    }\n\n    logout() {\n        this.currentUserSubject.next(null);\n        localStorage.removeItem('currentUser');\n        this.cookieService.delete('currentUser');\n    }\n\n    signUp(user: User): Observable<User> {\n        const url = `${apiUrl}/register`;\n        return this.http.post<User>(url, user);\n    }\n\n    update(user: User): Observable<User> {\n        const url = `${apiUrl}/profile`;\n        return this.http.put<User>(url, user);    }\n\n    get(email: string): Observable<User> {\n        const url = `${apiUrl}/profile/${email}`;\n        return this.http.get<User>(url);\n    }\n\n    /**\n     * Handle Http operation that failed.\n     * Let the app continue.\n     * @param operation - name of the operation that failed\n     * @param result - optional value to return as the observable result\n     */\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            console.log(error); // log to console instead\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnInit {\n\n  @Input() currentPage: any;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  counter(i = 1) {\n    return new Array(i);\n  }\n}\n","<div class=\"col-md-12 column\">\n  <ul class=\"pagination justify-content-end\">\n      <li class=\"page-item\" *ngIf=\"currentPage?.number > 0; else prev\">\n          <a\n                  class=\"page-link\"\n                  [routerLink]=\"['./']\"\n                  [queryParams]=\"{ page: currentPage?.number, size: currentPage?.size }\"\n          >Previous</a\n          >\n    </li>\n      <ng-template #prev>\n          <li class=\"page-item  disabled\"><a class=\"page-link\">Previous</a></li>\n      </ng-template>\n\n      <ng-container *ngFor=\"let item of counter(currentPage?.totalPages); let i = index\">\n          <li class=\"page-item\" *ngIf=\"currentPage && currentPage.number != i; else active\">\n            <a class=\"page-link \"\n                    routerLink=\"./\"\n                    [queryParams]=\"{ page: i + 1, size: currentPage?.size }\"\n            >{{ i + 1 }}</a\n            >\n        </li>\n          <ng-template #active>\n              <li\n                      class=\"page-item active \"\n\n              >\n                  <button class=\"page-link \" disabled>{{ i + 1 }}</button>\n              </li>\n          </ng-template>\n      </ng-container>\n\n      <li\n              class=\"page-item\"\n              *ngIf=\"currentPage?.number + 1 < currentPage?.totalPages; else next\"\n      >\n          <a\n                  class=\"page-link\"\n                  [routerLink]=\"['./']\"\n                  [queryParams]=\"{\n          page: currentPage?.number + 2,\n          size: currentPage?.size\n        }\"\n          >Next</a\n          >\n    </li>\n    <ng-template #next>\n        <li class=\"page-item disabled \"><a class=\"page-link\">Next</a></li>\n    </ng-template>\n  </ul>\n</div>\n","import {AfterContentChecked, Component, OnDestroy, OnInit} from '@angular/core';\nimport {CartService} from '../../services/cart.service';\nimport {Subject, Subscription} from 'rxjs';\nimport {UserService} from '../../services/user.service';\nimport {JwtResponse} from '../../response/JwtResponse';\nimport {ProductInOrder} from '../../models/ProductInOrder';\nimport {debounceTime, switchMap} from 'rxjs/operators';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Role} from '../../enum/Role';\n\n@Component({\n    selector: 'app-cart',\n    templateUrl: './cart.component.html',\n    styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit, OnDestroy, AfterContentChecked {\n\n    constructor(private cartService: CartService,\n                private userService: UserService,\n                private router: Router) {\n        this.userSubscription = this.userService.currentUser.subscribe(user => this.currentUser = user);\n    }\n\n    productInOrders = [];\n    total = 0;\n    currentUser: JwtResponse;\n    userSubscription: Subscription;\n\n    private updateTerms = new Subject<ProductInOrder>();\n    sub: Subscription;\n\n    static validateCount(productInOrder) {\n        const max = productInOrder.productStock;\n        if (productInOrder.count > max) {\n            productInOrder.count = max;\n        } else if (productInOrder.count < 1) {\n            productInOrder.count = 1;\n        }\n        console.log(productInOrder.count);\n    }\n\n    ngOnInit() {\n        this.cartService.getCart().subscribe(prods => {\n            this.productInOrders = prods;\n        });\n\n        this.sub = this.updateTerms.pipe(\n            // wait 300ms after each keystroke before considering the term\n            debounceTime(300),\n            //\n            // ignore new term if same as previous term\n            // Same Object Reference, not working here\n            //  distinctUntilChanged((p: ProductInOrder, q: ProductInOrder) => p.count === q.count),\n            //\n            // switch to new search observable each time the term changes\n            switchMap((productInOrder: ProductInOrder) => this.cartService.update(productInOrder))\n        ).subscribe(prod => {\n                if (prod) { throw new Error(); }\n            },\n            _ => console.log('Update Item Failed'));\n    }\n\n    ngOnDestroy() {\n        if (!this.currentUser) {\n            this.cartService.storeLocalCart();\n        }\n        this.userSubscription.unsubscribe();\n    }\n\n    ngAfterContentChecked() {\n        this.total = this.productInOrders.reduce(\n            (prev, cur) => prev + cur.count * cur.productPrice, 0);\n    }\n\n    addOne(productInOrder) {\n        productInOrder.count++;\n        CartComponent.validateCount(productInOrder);\n        if (this.currentUser) { this.updateTerms.next(productInOrder); }\n    }\n\n    minusOne(productInOrder) {\n        productInOrder.count--;\n        CartComponent.validateCount(productInOrder);\n        if (this.currentUser) { this.updateTerms.next(productInOrder); }\n    }\n\n    onChange(productInOrder) {\n        CartComponent.validateCount(productInOrder);\n        if (this.currentUser) { this.updateTerms.next(productInOrder); }\n    }\n\n\n    remove(productInOrder: ProductInOrder) {\n        this.cartService.remove(productInOrder).subscribe(\n            success => {\n               this.productInOrders = this.productInOrders.filter(e => e.productId !== productInOrder.productId);\n                console.log('Cart: ' + this.productInOrders);\n            },\n            _ => console.log('Remove Cart Failed'));\n    }\n\n    checkout() {\n        if (!this.currentUser) {\n            this.router.navigate(['/login'], {queryParams: {returnUrl: this.router.url}});\n        } else if (this.currentUser.role !== Role.Customer) {\n            this.router.navigate(['/seller']);\n        } else {\n            this.cartService.checkout().subscribe(\n                _ => {\n                    this.productInOrders = [];\n                },\n                error1 => {\n                    console.log('Checkout Cart Failed');\n                });\n            this.router.navigate(['/']);\n        }\n\n    }\n}\n\n","<h1 align=\"center\" class=\"display-4 mb-5\">My Cart</h1>\n\n<!--Cart Detail Table-->\n<table class=\"table table-striped text-center\">\n    <thead>\n    <tr>\n        <th scope=\"col\">Photo</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Price</th>\n        <th scope=\"col\">Quantity</th>\n        <th scope=\"col\">Subtotal</th>\n        <th scope=\"col\">Action</th>\n\n    </tr>\n    </thead>\n    <tbody>\n\n    <tr *ngFor=\"let productInOrder of productInOrders\">\n        <th class=\"align-middle\" scope=\"row\">\n            <a routerLink=\"/product/{{productInOrder.productId}}\"><img height=\"100px\"\n                                                                       src=\"{{productInOrder.productIcon}}\"\n                                                                       alt=\"{{productInOrder.productName}}\"></a>\n        </th>\n        <td class=\"align-middle\"><a\n                routerLink=\"/product/{{productInOrder.productId}}\">{{productInOrder.productName}}</a></td>\n        <td class=\"align-middle\">{{productInOrder.productPrice | currency}}</td>\n\n        <td class=\"align-middle\">\n            <a (click)=\"minusOne(productInOrder)\"><i class=\"fa fa-minus\"></i></a>\n            <input min=\"1\" id=\"{{productInOrder.productId}}\"\n                   [max]=productInOrder.productStock\n                   [(ngModel)]=\"productInOrder.count\"\n                   (change)=\"onChange(productInOrder)\"\n                   size=\"5\"\n                   type=\"number\"\n                   required\n                   name='count'>\n            <a (click)=\"addOne(productInOrder)\"> <i class=\"fa fa-plus\"></i></a>\n        </td>\n\n        <td class=\"align-middle\">{{productInOrder.productPrice * productInOrder.count|currency}}</td>\n        <td class=\"align-middle\">\n            <a (click)=\"remove(productInOrder)\" routerLink=\"./\">Remove</a>\n        </td>\n\n    </tr>\n\n    </tbody>\n</table>\n\n<div *ngIf=\"productInOrders?.length > 0; else empty\">\n    <h5 style=\"display: inline;\">Total: {{total | currency}}</h5>\n    <button (click)=\"checkout()\" class=\"btn btn-warning float-right\">Checkout</button>\n</div>\n<ng-template #empty>\n    <h4 class=\"text-muted text-center\">Cart is empty. Go to get something! :)</h4>\n</ng-template>\n\n<section class=\"pt-5 pb-5\">\n    <div  *ngIf=\"productInOrders?.length > 0; else empty\"  class=\"container\">\n      <div class=\"row w-100\">\n          <div class=\"col-lg-12 col-md-12 col-12\">\n              <h3 class=\"display-5 mb-2 text-center\">Shopping Cart</h3>\n              <p class=\"mb-5 text-center\">\n                  <i class=\"text-danger font-weight-bold\">{{productInOrders.length}}</i> item in your cart</p>\n              <table id=\"shoppingCart\" class=\"table table-condensed table-responsive\">\n                  <thead>\n                      <tr>\n                          <th style=\"width:60%\">Product</th>\n                          <th style=\"width:12%\">Price</th>\n                          <th style=\"width:10%\">Quantity</th>\n                          <th style=\"width:16%\"></th>\n                      </tr>\n                  </thead>\n                  <tbody>\n                      <tr *ngFor=\"let productInOrder of productInOrders\">\n                          <td data-th=\"Product\">\n                              <div class=\"row\">\n                                  <div class=\"col-md-3 text-left\">\n                                      <img src=\"{{productInOrder.productIcon}}\" alt=\"\" class=\"img-fluid d-none d-md-block rounded mb-2 shadow \">\n                                  </div>\n                                  <div class=\"col-md-9 text-left mt-sm-2\">\n                                      <h4>{{productInOrder.productName}}</h4>\n                                      <p class=\"font-weight-light\">{{productInOrder.productDescription}}</p>\n                                  </div>\n                              </div>\n                          </td>\n                          <td data-th=\"Price\">{{productInOrder.productPrice | currency : 'INR'}}</td>\n                          <td data-th=\"Quantity\">\n                           <!-- <a (click)=\"minusOne(productInOrder)\"><i class=\"fa fa-minus\"></i></a>-->\n                            <input type=\"number\" class=\"form-control form-control-lg text-center\" min=\"1\" id=\"{{productInOrder.productId}}\"\n                                   [max]=productInOrder.productStock\n                                   [(ngModel)]=\"productInOrder.count\"\n                                   (change)=\"onChange(productInOrder)\"\n                                   size=\"5\"\n                                   type=\"number\"\n                                   required\n                                   name='count'>\n                            <!--<a (click)=\"addOne(productInOrder)\"> <i class=\"fa fa-plus\"></i></a> -->\n                          </td>\n                          <td class=\"actions\" data-th=\"\">\n                              <div class=\"text-right\">\n                                  <button class=\"btn btn-white border-secondary bg-white btn-md mb-2\">\n                                      <i class=\"fas fa-sync\"></i>\n                                  </button>\n                                  <button (click)=\"remove(productInOrder)\" routerLink=\"./\" class=\"btn btn-white border-secondary bg-white btn-md mb-2\">\n                                      <i class=\"fas fa-trash\"></i>\n                                  </button>\n                              </div>\n                          </td>\n                      </tr>\n                     \n                  </tbody>\n              </table>\n              <div class=\"float-right text-right\">\n                  <h4>Subtotal:</h4>\n                  <h1>{{total | currency :'INR'}}</h1>\n              </div>\n          </div>\n      </div>\n      <div *ngIf=\"productInOrders?.length > 0; else empty\" class=\"row mt-4 d-flex align-items-center\">\n          <div class=\"col-sm-6 order-md-2 text-right\">\n              <a (click)=\"checkout()\" class=\"btn btn-primary mb-4 btn-lg pl-5 pr-5\">Checkout</a>\n          </div>\n          <div class=\"col-sm-6 mb-3 mb-m-1 order-md-1 text-md-left\">\n              <a href=\"product\">\n                  <i class=\"fas fa-arrow-left mr-2\"></i> Continue Shopping</a>\n          </div>\n      </div>\n  </div>\n  </section>\n\n\n","export enum OrderStatus {\n    \"New\",\n    \"Finished\",\n    \"Cenceled\"\n}\n","import {ProductInfo} from \"./productInfo\";\n\nexport class ProductInOrder {\n    productId: string;\n    productName: string;\n    productPrice: number;\n    productStock: number;\n    productDescription: string;\n    productIcon: string;\n    categoryType: number;\n    count: number;\n\n    constructor(productInfo:ProductInfo, quantity = 1){\n        this.productId = productInfo.productId;\n        this.productName = productInfo.productName;\n        this.productPrice = productInfo.productPrice;\n        this.productStock = productInfo.productStock;\n        this.productDescription = productInfo.productDescription;;\n        this.productIcon = productInfo.productIcon;\n        this.categoryType = productInfo.categoryType;\n        this.count = quantity;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CardComponent} from './pages/card/card.component';\nimport {LoginComponent} from './pages/login/login.component';\nimport {SignupComponent} from './pages/signup/signup.component';\nimport {DetailComponent} from './pages/product-detail/detail.component';\nimport {CartComponent} from './pages/cart/cart.component';\nimport {AuthGuard} from \"./_guards/auth.guard\";\nimport {OrderComponent} from \"./pages/order/order.component\";\nimport {OrderDetailComponent} from \"./pages/order-detail/order-detail.component\";\nimport {ProductListComponent} from \"./pages/product-list/product.list.component\";\nimport {UserDetailComponent} from \"./pages/user-edit/user-detail.component\";\nimport {ProductEditComponent} from \"./pages/product-edit/product-edit.component\";\nimport {Role} from \"./enum/Role\";\n\nconst routes: Routes = [\n    {path: '', redirectTo: '/product', pathMatch: 'full'},\n    {path: 'product/:id', component: DetailComponent},\n    {path: 'product/:keyword', component: CardComponent},\n    {path: 'category/:id', component: CardComponent},\n    {path: 'product', component: CardComponent},\n    {path: 'category', component: CardComponent},\n    {path: 'login', component: LoginComponent},\n    {path: 'logout', component: LoginComponent},\n    {path: 'register', component: SignupComponent},\n    {path: 'cart', component: CartComponent},\n    {path: 'success', component: SignupComponent},\n    {path: 'order/:id', component: OrderDetailComponent, canActivate: [AuthGuard]},\n    {path: 'order', component: OrderComponent, canActivate: [AuthGuard]},\n    {path: 'seller', redirectTo: 'seller/product', pathMatch: 'full'},\n    {\n        path: 'seller/product',\n        component: ProductListComponent,\n        canActivate: [AuthGuard],\n        data: {roles: [Role.Manager, Role.Employee]}\n    },\n    {\n        path: 'profile',\n        component: UserDetailComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'seller/product/:id/edit',\n        component: ProductEditComponent,\n        canActivate: [AuthGuard],\n        data: {roles: [Role.Manager, Role.Employee]}\n    },\n    {\n        path: 'seller/product/:id/new',\n        component: ProductEditComponent,\n        canActivate: [AuthGuard],\n        data: {roles: [Role.Employee]}\n    },\n\n];\n\n@NgModule({\n    declarations: [],\n    imports: [\n        RouterModule.forRoot(routes)//{onSameUrlNavigation: 'reload'}\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Role} from \"../enum/Role\";\n\nexport class User {\n\n    email: string;\n\n    password: string;\n\n    name: string;\n\n    phone: string;\n\n    address: string;\n\n    active: boolean;\n\n    role: string;\n\n    constructor(){\n        this.active = true;\n        this.role = Role.Customer;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ProductService} from '../../services/product.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CartService} from '../../services/cart.service';\nimport {CookieService} from 'ngx-cookie-service';\nimport {ProductInOrder} from '../../models/ProductInOrder';\nimport {ProductInfo} from '../../models/productInfo';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n  title: string;\n  count: number;\n  productInfo: ProductInfo;\n\n  constructor(\n      private productService: ProductService,\n      private cartService: CartService,\n      private cookieService: CookieService,\n      private route: ActivatedRoute,\n      private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.getProduct();\n    this.title = 'Product Detail';\n    this.count = 1;\n  }\n\n  // ngOnChanges(changes: SimpleChanges): void {\n  //   // Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n  //   // Add '${implements OnChanges}' to the class.\n  //   console.log(changes);\n  //   if (this.item.quantity in changes) {\n\n  //   }\n  // }\n\n  getProduct(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.productService.getDetail(id).subscribe(\n        prod => {\n          this.productInfo = prod;\n        },\n        _ => console.log('Get Cart Failed')\n    );\n  }\n\n  addToCart() {\n    this.cartService\n        .addItem(new ProductInOrder(this.productInfo, this.count))\n        .subscribe(\n            res => {\n              if (!res) {\n                console.log('Add Cart failed' + res);\n                throw new Error();\n              }\n              this.router.navigateByUrl('/cart');\n            },\n            _ => console.log('Add Cart Failed')\n        );\n  }\n\n  validateCount() {\n    console.log('Validate');\n    const max = this.productInfo.productStock;\n    if (this.count > max) {\n      this.count = max;\n    } else if (this.count < 1) {\n      this.count = 1;\n    }\n  }\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">{{title}}</h1>\n<div class=\"row text-center justify-content-center\">\n  <div class=\"col-lg-6 \">\n    <div class=\"card mb-4 \">\n      <img height=\"60%\" class=\"card-img-top\" src=\"{{productInfo?.productIcon}}\">\n      <div class=\"card-body\">\n        <h4 class=\"card-title \">{{productInfo?.productName}}</h4>\n        <form name=\"form\" #form='ngForm' (ngSubmit)=\"productInfo?.productStatus == 0 && addToCart()\">\n          <div class=\"text-left\">\n            <input hidden name=\"productId\" [value]=productInfo?.productId>\n            <p class=\"card-test\"><strong>Description: </strong>{{productInfo?.productDescription}}</p>\n            <p class=\"card-text\">\n              <strong>Price: </strong>\n              <label id=\"price\">{{productInfo?.productPrice | currency}}</label>\n            </p>\n            <p class=\"card-text\"><strong>Stock: </strong>{{productInfo?.productStock}}</p>\n\n            <label class=\"card-text\">\n              <strong>Quantity: </strong>\n              <input [(ngModel)]=count\n                     (change)=\"validateCount()\"\n                     type=\"number\"\n                     name=\"count\"\n                     required\n                     min=\"1\"\n                     [max]=productInfo?.productStock\n              >\n            </label>\n\n\n            <p class=\"card-text\"><strong>Subtotal: </strong>\n              <label id=\"subtotal\">{{count * productInfo?.productPrice | currency}}</label>\n            </p>\n          </div>\n          <button type=\"submit\" [disabled]=\"!form.form.valid\" *ngIf=\"productInfo?.productStatus == 0; else offBlock\"\n                  class=\"btn btn-primary btn-lg\"\n          >Add to Cart\n          </button>\n          <ng-template #offBlock><a class=\"btn btn-secondary btn-lg disabled\">Unavailable</a></ng-template>\n        </form>\n\n      </div>\n    </div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {UserService} from \"../services/user.service\";\nimport {Observable, throwError} from \"rxjs\";\nimport {catchError} from \"rxjs/operators\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private userService: UserService,\n                private router: Router) {\n    }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        // auto logout if 401 response returned from api\n        this.userService.logout();\n          this.router.navigate(['/login']);\n      }\n\n        const error = err.error || err.statusText;\n      return throwError(error);\n    }))\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}