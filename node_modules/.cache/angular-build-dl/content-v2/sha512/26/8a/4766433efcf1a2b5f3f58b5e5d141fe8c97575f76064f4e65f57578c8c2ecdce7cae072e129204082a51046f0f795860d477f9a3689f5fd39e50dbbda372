{"version":3,"sources":["webpack:///src/app/pages/order/order.component.ts","webpack:///src/app/pages/order/order.component.html","webpack:///src/app/parts/navigation/navigation.component.ts","webpack:///src/app/parts/navigation/navigation.component.html","webpack:///src/app/pages/product-edit/product-edit.component.ts","webpack:///src/app/pages/product-edit/product-edit.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/services/product.service.ts","webpack:///src/app/enum/Role.ts","webpack:///src/app/_interceptors/jwt-interceptor.service.ts","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/enum/CategoryType.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/cart.service.ts","webpack:///src/app/pages/card/card.component.ts","webpack:///src/app/pages/card/card.component.html","webpack:///src/app/pages/user-edit/user-detail.component.ts","webpack:///src/app/pages/user-edit/user-detail.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/models/productInfo.ts","webpack:///src/app/pages/product-list/product.list.component.ts","webpack:///src/app/pages/product-list/product.list.component.html","webpack:///src/app/services/order.service.ts","webpack:///src/app/pages/order-detail/order-detail.component.ts","webpack:///src/app/pages/order-detail/order-detail.component.html","webpack:///src/app/pages/signup/signup.component.ts","webpack:///src/app/pages/signup/signup.component.html","webpack:///src/app/enum/ProductStatus.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/parts/pagination/pagination.component.ts","webpack:///src/app/parts/pagination/pagination.component.html","webpack:///src/app/pages/cart/cart.component.ts","webpack:///src/app/pages/cart/cart.component.html","webpack:///src/app/enum/OrderStatus.ts","webpack:///src/app/models/ProductInOrder.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/models/User.ts","webpack:///src/app/pages/product-detail/detail.component.ts","webpack:///src/app/pages/product-detail/detail.component.html","webpack:///src/app/_interceptors/error-interceptor.service.ts","webpack:///src/main.ts"],"names":["OrderComponent","httpClient","orderService","userService","route","OrderStatus","Role","currentUser","currentUserValue","querySub","queryParams","subscribe","update","nextPage","size","snapshot","queryParamMap","get","getPage","page","_","console","log","order","cancel","orderId","res","orderStatus","finish","unsubscribe","selector","templateUrl","styleUrls","NavigationComponent","router","root","name$","aName","name","currentUserSubscription","user","role","Customer","logout","ProductEditComponent","productService","product","isEdit","productId","paramMap","getDetail","prod","Error","navigate","err","add","create","e","onSubmit","environment","production","apiUrl","LoginComponent","submitted","model","username","password","remembered","returnUrl","params","isLogout","has","login","navigateByUrl","isInvalid","u","p","ProductService","http","productUrl","categoryUrl","url","pipe","categoryType","productName","id","productInfo","put","post","operation","result","error","providedIn","JwtInterceptor","request","next","token","clone","setHeaders","Authorization","type","handle","AuthGuard","state","data","roles","indexOf","AppComponent","title","CategoryType","AppModule","provide","useClass","multi","declarations","imports","providers","bootstrap","CartService","cookieService","cartUrl","localMap","itemsSubject","items","asObservable","totalSubject","total","check","JSON","parse","Object","values","localCart","getLocalCart","length","clearLocalCart","cart","products","productInOrder","count","set","stringify","CardComponent","paramSub","currentPage","getProds","getAllInPage","path","getCategoryInPage","categoryPage","category","UserDetailComponent","account","nameTerms","webpackEmptyAsyncContext","req","Promise","resolve","then","code","keys","module","exports","ProductInfo","productPrice","productStock","productDescription","productIcon","productStatus","ProductListComponent","modalService","closeResult","ProductStatus","productInfos","delelte","filter","content","open","ariaLabelledBy","reason","getDismissReason","ESC","BACKDROP_CLICK","OrderService","orderUrl","patch","OrderDetailComponent","order$","show","SignupComponent","location","signUp","UserService","memo","localStorage","getItem","currentUserSubject","loginForm","setItem","handleError","removeItem","email","value","PaginationComponent","i","Array","CartComponent","cartService","productInOrders","updateTerms","userSubscription","getCart","prods","sub","storeLocalCart","reduce","prev","cur","validateCount","remove","success","checkout","error1","max","ProductInOrder","quantity","routes","redirectTo","pathMatch","component","canActivate","Manager","Employee","AppRoutingModule","forRoot","User","active","DetailComponent","getProduct","addItem","addToCart","ErrorInterceptor","status","statusText","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {OrderService} from \"../../services/order.service\";\nimport {Order} from \"../../models/Order\";\nimport {OrderStatus} from \"../../enum/OrderStatus\";\nimport {UserService} from \"../../services/user.service\";\nimport {JwtResponse} from \"../../response/JwtResponse\";\nimport {Subscription} from \"rxjs\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n    selector: 'app-order',\n    templateUrl: './order.component.html',\n    styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit, OnDestroy {\n\n    page: any;\n    OrderStatus = OrderStatus;\n    currentUser: JwtResponse;\n    Role = Role;\n    constructor(private httpClient: HttpClient,\n                private orderService: OrderService,\n                private userService: UserService,\n                private route: ActivatedRoute\n    ) {\n    }\n\n    querySub: Subscription;\n\n    ngOnInit() {\n        this.currentUser = this.userService.currentUserValue;\n        this.querySub = this.route.queryParams.subscribe(() => {\n            this.update();\n        });\n\n    }\n\n    update() {\n        let nextPage = 1;\n        let size = 10;\n        if (this.route.snapshot.queryParamMap.get('page')) {\n            nextPage = +this.route.snapshot.queryParamMap.get('page');\n            size = +this.route.snapshot.queryParamMap.get('size');\n        }\n        this.orderService.getPage(nextPage, size).subscribe(page => this.page = page, _ => {\n            console.log(\"Get Orde Failed\")\n        });\n    }\n\n\n    cancel(order: Order) {\n        this.orderService.cancel(order.orderId).subscribe(res => {\n            if (res) {\n                order.orderStatus = res.orderStatus;\n            }\n        });\n    }\n\n    finish(order: Order) {\n        this.orderService.finish(order.orderId).subscribe(res => {\n            if (res) {\n                order.orderStatus = res.orderStatus;\n            }\n        })\n    }\n\n    ngOnDestroy(): void {\n        this.querySub.unsubscribe();\n    }\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Orders</h1>\n\n<table class=\"table table-striped text-center\">\n    <thead>\n    <tr>\n        <th scope=\"col\">Order #</th>\n        <th scope=\"col\">Customer Name</th>\n        <th scope=\"col\">Customer Email</th>\n        <th scope=\"col\">Customer phone</th>\n        <th scope=\"col\">Shipping Address</th>\n        <th scope=\"col\">Total</th>\n        <th scope=\"col\">Order Data</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n    <tbody>\n\n    <tr *ngFor=\"let order of page?.content\">\n        <th class=\"align-middle\" scope=\"row\">\n            {{order.orderId}}\n        </th>\n        <td class=\"align-middle\">{{order.buyerName}}</td>\n        <td class=\"align-middle\">{{order.buyerEmail}}</td>\n        <td class=\"align-middle\">{{order.buyerPhone}}</td>\n        <td class=\"align-middle\">{{order.buyerAddress}}</td>\n        <td class=\"align-middle\">{{order.orderAmount | currency}}</td>\n        <td class=\"align-middle\">{{order.createTime | date}}</td>\n        <td class=\"align-middle\">{{OrderStatus[order.orderStatus]}}</td>\n        <td class=\"align-middle\">\n            <a *ngIf=\"!(currentUser.role == Role.Customer && currentUser.name == order.buyerEmail)\"\n               style=\"display:\n            block\" href=\"\" routerLink=\"/order/{{order.orderId}}\">\n                Show</a>\n            <a *ngIf=\"order.orderStatus == 0\" style=\"display: block\" (click)=\"cancel(order)\" routerLink=\"./\">Cancel</a>\n            <a *ngIf=\"currentUser.role != Role.Customer && order.orderStatus == 0\"\n               style=\"display: block\"\n               (click)=\"finish(order)\"\n               routerLink=\"./\">\n                Finish</a>\n        </td>\n    </tr>\n    </tbody>\n</table>\n\n<app-pagination [currentPage]=\"page\"></app-pagination>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {Subscription} from \"rxjs\";\nimport {JwtResponse} from \"../../response/JwtResponse\";\nimport {Router} from \"@angular/router\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n    selector: 'app-navigation',\n    templateUrl: './navigation.component.html',\n    styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit, OnDestroy {\n\n\n    currentUserSubscription: Subscription;\n    name$;\n    name: string;\n    currentUser: JwtResponse;\n    root = '/';\n    Role = Role;\n\n    constructor(private userService: UserService,\n                private router: Router,\n    ) {\n\n    }\n\n\n    ngOnInit() {\n        this.name$ = this.userService.name$.subscribe(aName => this.name = aName);\n        this.currentUserSubscription = this.userService.currentUser.subscribe(user => {\n            this.currentUser = user;\n            if (!user || user.role == Role.Customer) {\n                this.root = '/';\n            } else {\n                this.root = '/seller';\n            }\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.currentUserSubscription.unsubscribe();\n        // this.name$.unsubscribe();\n    }\n\n    logout() {\n        this.userService.logout();\n        // this.router.navigate(['/login'], {queryParams: {logout: 'true'}} );\n    }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" [routerLink]=\"root\">\n        <img src=\"/assets/brand.png\" width=\"125\" class=\"d-inline-block align-top\" alt=\"\">\n    </a>\n\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n\n        <div class=\"navbar-nav\" *ngIf=\"!currentUser || currentUser.role == Role.Customer\">\n\n            <a class=\"nav-item nav-link \"\n               routerLink=\"/category/0\">\n                Meals\n            </a>\n            <a class=\"nav-item nav-link\"\n               routerLink=\"/category/1\">\n                Wraps\n            </a>\n            <a class=\"nav-item nav-link \"\n               routerLink=\"/category/2\">\n                Deserts\n            </a>\n            <a class=\"nav-item nav-link\"\n               routerLink=\"/category/3\">\n                Drink\n            </a>\n\n        </div>\n\n        <div class=\"navbar-nav ml-auto\">\n            <a *ngIf=\"!currentUser || currentUser.role == Role.Customer\"\n                    class=\"nav-item nav-link \" routerLink=\"/cart\">\n                <i class=\"fas fa-shopping-cart\"></i>\n                Cart\n            </a>\n\n            <ng-container *ngIf=\"currentUser; else noUser\">\n                <a class=\"nav-item nav-link \" routerLink=\"/order\">\n                    <i class=\"fas fa-list-ul\"></i>\n                    Orders\n                </a>\n                <a class=\"nav-item nav-link \" routerLink=\"/profile\">\n                    {{name}}\n                </a>\n                <a class=\"nav-item nav-link \" (click)=\"logout()\" routerLink=\"/login\" [queryParams]=\"{logout: true}\">\n                    Sign Out\n                </a>\n            </ng-container>\n            <ng-template #noUser>\n                <a class=\"nav-item nav-link \" routerLink=\"/login\">\n                    Sign In\n                </a>\n                <a class=\"nav-item nav-link \" routerLink=\"/register\">\n                    Sign Up\n                </a>\n            </ng-template>\n        </div>\n    </div>\n</nav>\n","import {AfterContentChecked, Component, OnInit} from '@angular/core';\nimport {ProductInfo} from \"../../models/productInfo\";\nimport {ProductService} from \"../../services/product.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-product-edit',\n    templateUrl: './product-edit.component.html',\n    styleUrls: ['./product-edit.component.css']\n})\nexport class ProductEditComponent implements OnInit, AfterContentChecked {\n\n    product = new ProductInfo();\n\n    constructor(private productService: ProductService,\n                private route: ActivatedRoute,\n                private router: Router) {\n    }\n\n    productId: string;\n    isEdit = false;\n\n    ngOnInit() {\n        this.productId = this.route.snapshot.paramMap.get('id');\n        if (this.productId) {\n            this.isEdit = true;\n            this.productService.getDetail(this.productId).subscribe(prod => this.product = prod);\n        }\n\n    }\n\n    update() {\n        this.productService.update(this.product).subscribe(prod => {\n                if (!prod) throw new Error();\n                this.router.navigate(['/seller']);\n            },\n            err => {\n            });\n\n    }\n\n    onSubmit() {\n        if (this.productId) {\n            this.update();\n        } else {\n            this.add();\n        }\n    }\n\n    add() {\n        this.productService.create(this.product).subscribe(prod => {\n                if (!prod) throw new Error;\n                this.router.navigate(['/']);\n            },\n            e => {\n            });\n    }\n\n    ngAfterContentChecked(): void {\n        console.log(this.product);\n    }\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Edit Product</h1>\n<div style=\"width:40%; margin: 25px auto\">\n    <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n        <!--Id-->\n        <div class=\"form-group\">\n            <label for=\"productId\">Code</label>\n            <input [readOnly]=\"isEdit\" [disabled]=\"isEdit\" [(ngModel)]=\"product.productId\" type=\"text\"\n                   class=\"form-control form-control-lg\" #productIdInput\n                   id=\"productId\" name=\"productId\" required #productId=\"ngModel\">\n            <div *ngIf=\"productIdInput.invalid && (productIdInput.dirty ||productIdInput.touched)\">\n                <div *ngIf=\"productIdInput.errors.required\">\n                    Name is required.\n                </div>\n            </div>\n        </div>\n        <!--Photo-->\n        <div class=\"form-group\">\n            <label>Photo Link</label>\n            <input [(ngModel)]=\"product.productIcon\" type=\"text\" class=\"form-control form-control-lg\" id=\"productIcon\"\n                   name=\"productIcon\" placeholder=\"Photo\">\n        </div>\n\n        <!--Name-->\n        <div class=\"form-group\">\n            <label>Name</label>\n            <input [(ngModel)]=\"product.productName\" type=\"text\" class=\"form-control form-control-lg\" id=\"productName\"\n                   #productName=\"ngModel\"\n                   name=\"productName\" placeholder=\"Name\" required>\n        </div>\n        <div *ngIf=\"productName.invalid && (productName.dirty ||productName.touched)\">\n            <div *ngIf=\"productName.errors.required\">\n                Name is required.\n            </div>\n        </div>\n\n        <!--Category-->\n        <div class=\"form-group\">\n            <label for=\"categoryType\">Category</label>\n            <select class=\"custom-select custom-select-lg \" id=\"categoryType\" name=\"categoryType\"\n                    [(ngModel)]=\"product.categoryType\"\n                    required>\n                <option [ngValue]=0>Books</option>\n                <option [ngValue]=1>Food</option>\n                <option [ngValue]=2>Clothes</option>\n                <option [ngValue]=3>Drink</option>\n            </select>\n        </div>\n\n        <!--Description-->\n        <div class=\"form-group\">\n            <label>Description</label>\n            <textarea class=\"form-control form-control-lg text-left\"\n                      id=\"productDescription\" name=\"productDescription\"\n                      placeholder=\"Description\" [(ngModel)]=\"product.productDescription\"></textarea>\n        </div>\n        <!--Price-->\n        <div class=\"form-group\">\n            <label for=\"productPrice\">Price</label>\n            <input class=\"form-control form-control-lg\"\n                   type=\"number\"\n                   id=\"productPrice\"\n                   name=\"productPrice\"\n                   #productPrice=\"ngModel\"\n                   [ngModel]=\"product.productPrice\" (ngModelChange)=\"product.productPrice=$event\"\n                   required>\n            <div *ngIf=\"productPrice.invalid && (productPrice.dirty ||productPrice.touched)\">\n                <div *ngIf=\"productPrice.errors.required\">\n                    Price is required.\n                </div>\n            </div>\n        </div>\n        <!--Stock-->\n        <div class=\"form-group\">\n            <label for=\"productStock\">Stock</label>\n            <input class=\"form-control form-control-lg\"\n                   type=\"number\"\n                   id=\"productStock\"\n                   name=\"productStock\"\n                   min=\"0\" #productStock=\"ngModel\"\n                   [(ngModel)]=\"product.productStock\"\n                   required>\n            <div *ngIf=\"productStock.invalid && (productStock.dirty ||productStock.touched)\">\n                <div *ngIf=\"productStock.errors.required\">\n                    Stock is required.\n                </div>\n            </div>\n        </div>\n        <!--Status-->\n        <div class=\"form-group\">\n            <label for=\"productStatus\">Status</label>\n            <select class=\"custom-select custom-select-lg \" id=\"productStatus\" name=\"productStatus\" required\n                    [(ngModel)]=\"product.productStatus\">\n                <option [ngValue]=0>Available</option>\n                <option [ngValue]=1>Unavailable</option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <button type=\"submit\" [disabled]=\"!form.form.valid\" class=\"btn btn-lg btn-primary btn-block\">Submit</button>\n        </div>\n    </form>\n\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\nexport const apiUrl = '//54.82.17.114:8888/api';\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    isInvalid: boolean;\n    isLogout: boolean;\n    submitted = false;\n    model: any = {\n        username: '',\n        password: '',\n        remembered:false\n    };\n\n    returnUrl = '/';\n\n    constructor(private userService: UserService,\n                private router: Router,\n                private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        let params = this.route.snapshot.queryParamMap;\n        this.isLogout = params.has('logout');\n        this.returnUrl = params.get('returnUrl');\n    }\n\n    onSubmit() {\n        this.submitted = true;\n        console.log(this.model);\n        this.userService.login(this.model).subscribe(\n            user => {\n                if (user) {\n                    if (user.role != Role.Customer) {\n\n                        this.returnUrl = '/seller';\n                    }\n\n                    this.router.navigateByUrl(this.returnUrl);\n                } else {\n                    this.isLogout = false;\n                    this.isInvalid = true;\n                }\n\n            }\n        );\n    }\n\n    fillLoginFields(u, p) {\n        this.model.username = u;\n        this.model.password = p;\n        this.onSubmit();\n    }\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Sign In</h1>\n<div style=\"width:40%; margin: 25px auto\">\n\n    <div class=\"alert alert-danger\" *ngIf=\"isInvalid\">\n        Invalid username and password.\n    </div>\n    <div class=\"alert alert-info\" *ngIf=\"isLogout\">\n        You have been logged out.\n    </div>\n\n\n    <form #form='ngForm' (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label>Email address</label>\n            <input type=\"text\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Enter email\" required autofocus\n                [(ngModel)]=\"model.username\" #email=\"ngModel\" autocomplete=\"email\">\n            <div [hidden]=\"email.valid || email.pristine\" class=\"alert alert-danger\">\n                Email is required\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <label>Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" autocomplete=\"password\"\n                placeholder=\"Password\" required [(ngModel)]=\"model.password\" #password='ngModel'>\n            <div [hidden]=\"password.valid || password.pristine\" class=\"alert alert-danger\">\n                Password is required\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <div>\n                <div class=\"form-group form-check\">\n                    <input type=\"checkbox\" class=\"form-check-input\" id=\"remember_me\" name=\"remember-me\" [(ngModel)]=\"model.remembered\">\n                    <label class=\"form-check-label\" for=\"remember_me\"> Remember me </label>\n                </div>\n                <!-- <input type=\"checkbox\" id=\"remember_me\" name=\"remember-me\" [(ngModel)]=\"model.remembered\">\n                <label for=\"remember_me\" class=\"form-check-label\">  Remember me</label> -->\n\n            </div>\n            <label class=\"form-check-lable float-right mb-3\" >Don't have an account yet? &nbsp;<a class=\"float-right\" routerLink=\"/register\"\n                   > Sign Up</a> </label>\n        </div>\n\n\n        <div class=\"form-group\">\n            <button [disabled]=\"!form.form.valid\" type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Sign\n                In</button>\n        </div>\n    </form>\n\n</div>","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {ProductInfo} from '../models/productInfo';\nimport {apiUrl} from '../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProductService {\n\n    private productUrl = `${apiUrl}/product`;\n    private categoryUrl = `${apiUrl}/category`;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAllInPage(page: number, size: number): Observable<any> {\n        const url = `${this.productUrl}?page=${page}&size=${size}`;\n        return this.http.get(url)\n            .pipe(\n                // tap(_ => console.log(_)),\n            )\n    }\n\n    getCategoryInPage(categoryType: number, page: number, size: number): Observable<any> {\n        const url = `${this.categoryUrl}/${categoryType}?page=${page}&size=${size}`;\n        return this.http.get(url).pipe(\n            // tap(data => console.log(data))\n        );\n    }\n\n    getSearchInPage(productName: number, page: number, size: number): Observable<any> {\n        const url = `${this.categoryUrl}/search/${productName}?page=${page}&size=${size}`;\n        return this.http.get(url).pipe(\n            // tap(data => console.log(data))\n        );\n    }\n\n    getDetail(id: String): Observable<ProductInfo> {\n        const url = `${this.productUrl}/${id}`;\n        return this.http.get<ProductInfo>(url).pipe(\n            catchError(_ => {\n                console.log(\"Get Detail Failed\");\n                return of(new ProductInfo());\n            })\n        );\n    }\n\n    update(productInfo: ProductInfo): Observable<ProductInfo> {\n        const url = `${apiUrl}/seller/product/${productInfo.productId}/edit`;\n        return this.http.put<ProductInfo>(url, productInfo);\n    }\n\n    create(productInfo: ProductInfo): Observable<ProductInfo> {\n        const url = `${apiUrl}/seller/product/new`;\n        return this.http.post<ProductInfo>(url, productInfo);\n    }\n\n\n    delelte(productInfo: ProductInfo): Observable<any> {\n        const url = `${apiUrl}/seller/product/${productInfo.productId}/delete`;\n        return this.http.delete(url);\n    }\n\n\n    /**\n     * Handle Http operation that failed.\n     * Let the app continue.\n     * @param operation - name of the operation that failed\n     * @param result - optional value to return as the observable result\n     */\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            console.error(error); // log to console instead\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n}\n","export enum Role {\n    Customer = 'ROLE_CUSTOMER',\n    Employee = 'ROLE_EMPLOYEE',\n    Manager = 'ROLE_MANAGER'\n}\n","import {Injectable} from '@angular/core';\nimport {UserService} from \"../services/user.service\";\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JwtInterceptor implements HttpInterceptor {\n\n\n    constructor(private userService: UserService,\n    ) {\n\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        const currentUser = this.userService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `${currentUser.type} ${currentUser.token}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n        }\n        return next.handle(request);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {UserService} from \"../services/user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\n    constructor(\n        private router: Router,\n        private userService: UserService\n    ) {\n    }\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        const currentUser = this.userService.currentUserValue;\n        if (currentUser) {\n            // check if route is restricted by role\n            if (route.data.roles && route.data.roles.indexOf(currentUser.role) === -1) {\n                console.log(currentUser.role + \"fail in \" + route.data.roles);\n                // role not authorised so redirect to home page\n                this.router.navigate(['/']);\n                return false;\n            }\n            // authorised so return true\n            return true;\n        }\n\n        console.log(\"Need log in\");\n        // not logged in so redirect to login page with the return url{queryParams: {returnUrl: state.url}}\n        this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\n        return false;\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Hungerr';\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div class=\"container\">\n<app-navigation></app-navigation>\n<router-outlet></router-outlet>\n    <div class=\"container\">\n        <br>\n        <br>\n        <hr>\n        <div class=\"text-center\">\n            <a style=\"color: inherit\" href=\"https://github.com/Mr-PerFectt\"><i class=\"fab fa-github fa-3x\"></i></a>\n        </div>\n\n\n        <!--Copyright-->\n        <div class=\"footer-copyright py-3 text-center\">\n            © 2020 Copyright:\n            <a href=\"https://mrperfect.ml/\"> Mr. Perfect </a>\n        </div>\n    </div>\n</div>\n","export enum CategoryType {\n    \"Books\", \"Food\", \"Clothes\", \"Drink\"\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {NavigationComponent} from './parts/navigation/navigation.component';\nimport {CardComponent} from './pages/card/card.component';\nimport {PaginationComponent} from './parts/pagination/pagination.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {LoginComponent} from './pages/login/login.component';\nimport {SignupComponent} from './pages/signup/signup.component';\nimport {DetailComponent} from './pages/product-detail/detail.component';\nimport {FormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {CartComponent} from './pages/cart/cart.component';\nimport {CookieService} from \"ngx-cookie-service\";\nimport {ErrorInterceptor} from \"./_interceptors/error-interceptor.service\";\nimport {JwtInterceptor} from \"./_interceptors/jwt-interceptor.service\";\nimport {OrderComponent} from './pages/order/order.component';\nimport {OrderDetailComponent} from './pages/order-detail/order-detail.component';\nimport {ProductListComponent} from './pages/product-list/product.list.component';\nimport {UserDetailComponent} from './pages/user-edit/user-detail.component';\nimport {ProductEditComponent} from './pages/product-edit/product-edit.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n@NgModule({\n    declarations: [\n        AppComponent,\n        NavigationComponent,\n        CardComponent,\n        PaginationComponent,\n        LoginComponent,\n        SignupComponent,\n        DetailComponent,\n        CartComponent,\n        OrderComponent,\n        OrderDetailComponent,\n        ProductListComponent,\n        UserDetailComponent,\n        ProductEditComponent,\n\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        FormsModule,\n        HttpClientModule,\n        NgbModule\n\n    ],\n    providers: [CookieService,\n        {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n        {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {apiUrl} from '../../environments/environment';\nimport {CookieService} from 'ngx-cookie-service';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {UserService} from './user.service';\nimport {Cart} from '../models/Cart';\nimport {Item} from '../models/Item';\nimport {JwtResponse} from '../response/JwtResponse';\nimport {ProductInOrder} from '../models/ProductInOrder';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CartService {\n\n\n    private cartUrl = `${apiUrl}/cart`;\n\n    localMap = {};\n\n\n    private itemsSubject: BehaviorSubject<Item[]>;\n    private totalSubject: BehaviorSubject<number>;\n    public items: Observable<Item[]>;\n    public total: Observable<number>;\n\n\n    private currentUser: JwtResponse;\n\n    constructor(private http: HttpClient,\n                private cookieService: CookieService,\n                private userService: UserService) {\n        this.itemsSubject = new BehaviorSubject<Item[]>(null);\n        this.items = this.itemsSubject.asObservable();\n        this.totalSubject = new BehaviorSubject<number>(null);\n        this.total = this.totalSubject.asObservable();\n        this.userService.currentUser.subscribe(user => this.currentUser = user);\n\n\n    }\n\n    private getLocalCart(): ProductInOrder[] {\n        if (this.cookieService.check('cart')) {\n            this.localMap = JSON.parse(this.cookieService.get('cart'));\n            return Object.values(this.localMap);\n        } else {\n            this.localMap = {};\n            return [];\n        }\n    }\n\n    getCart(): Observable<ProductInOrder[]> {\n        const localCart = this.getLocalCart();\n        if (this.currentUser) {\n            if (localCart.length > 0) {\n                return this.http.post<Cart>(this.cartUrl, localCart).pipe(\n                    tap(_ => {\n                        this.clearLocalCart();\n                    }),\n                    map(cart => cart.products),\n                    catchError(_ => of([]))\n                );\n            } else {\n                return this.http.get<Cart>(this.cartUrl).pipe(\n                    map(cart => cart.products),\n                    catchError(_ => of([]))\n                );\n            }\n        } else {\n            return of(localCart);\n        }\n    }\n\n    addItem(productInOrder): Observable<boolean> {\n        if (!this.currentUser) {\n            if (this.cookieService.check('cart')) {\n                this.localMap = JSON.parse(this.cookieService.get('cart'));\n            }\n            if (!this.localMap[productInOrder.productId]) {\n                this.localMap[productInOrder.productId] = productInOrder;\n            } else {\n                this.localMap[productInOrder.productId].count += productInOrder.count;\n            }\n            this.cookieService.set('cart', JSON.stringify(this.localMap));\n            return of(true);\n        } else {\n            const url = `${this.cartUrl}/add`;\n            return this.http.post<boolean>(url, {\n                'quantity': productInOrder.count,\n                'productId': productInOrder.productId\n            });\n        }\n    }\n\n    update(productInOrder): Observable<ProductInOrder> {\n\n        if (this.currentUser) {\n            const url = `${this.cartUrl}/${productInOrder.productId}`;\n            return this.http.put<ProductInOrder>(url, productInOrder.count);\n        }\n    }\n\n\n    remove(productInOrder) {\n        if (!this.currentUser) {\n            delete this.localMap[productInOrder.productId];\n            return of(null);\n        } else {\n            const url = `${this.cartUrl}/${productInOrder.productId}`;\n            return this.http.delete(url).pipe( );\n        }\n    }\n\n\n    checkout(): Observable<any> {\n        const url = `${this.cartUrl}/checkout`;\n        return this.http.post(url, null).pipe();\n    }\n\n    storeLocalCart() {\n        this.cookieService.set('cart', JSON.stringify(this.localMap));\n    }\n\n    clearLocalCart() {\n        console.log('clear local cart');\n        this.cookieService.delete('cart');\n        this.localMap = {};\n    }\n\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\n// import {prod, products} from '../shared/mockData';\nimport {ProductService} from '../../services/product.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit, OnDestroy {\n\n\n  title: string;\n  page: any;\n  private paramSub: Subscription;\n  private querySub: Subscription;\n\n\n  constructor(private productService: ProductService,\n              private route: ActivatedRoute) {\n\n  }\n\n\n  ngOnInit() {\n    this.querySub = this.route.queryParams.subscribe(() => {\n      this.update();\n    });\n    this.paramSub = this.route.params.subscribe(() => {\n      this.update();\n    });\n\n  }\n\n  ngOnDestroy(): void {\n    this.querySub.unsubscribe();\n    this.paramSub.unsubscribe();\n  }\n\n  update() {\n    if (this.route.snapshot.queryParamMap.get('page')) {\n      const currentPage = +this.route.snapshot.queryParamMap.get('page');\n      const size = +this.route.snapshot.queryParamMap.get('size');\n      this.getProds(currentPage, size);\n    } else {\n      this.getProds();\n    }\n  }\n  getProds(page: number = 1, size: number = 3) {\n    if (this.route.snapshot.url.length == 1) {\n      this.productService.getAllInPage(+page, +size)\n        .subscribe(page => {\n          this.page = page;\n          this.title = 'Its Hard To Spell When Your Hungry !';\n        });\n    } else { //  /category/:id\n      const type = this.route.snapshot.url[1].path;\n      this.productService.getCategoryInPage(+type, page, size)\n        .subscribe(categoryPage => {\n          this.title = categoryPage.category;\n          this.page = categoryPage.page;\n        });\n    }\n\n  }\n\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">{{title}}</h1>\n<div class=\"row card-deck text-center\">\n  <div *ngFor=\"let productInfo of page?.content\" class=\"col-lg-4 \">\n    <div class=\"card mb-4\"  >\n      <img height=\"50%\" class=\"card-img-top\" src=\"{{productInfo.productIcon}}\" alt=\"{{productInfo.productName}}\">\n      <div class=\"card-body\">\n        <h4 class=\"card-title \">{{productInfo.productName}}</h4>\n        <div class=\"text-left\">\n          <p class=\"card-test\"><strong>Description: </strong>{{productInfo.productDescription}}</p>\n          <p class=\"card-text\"><strong>Price: </strong>{{productInfo.productPrice | currency:'INR'}}</p>\n          <p class=\"card-text\"><strong>Stock: </strong>{{productInfo.productStock}}</p>\n        </div>\n        <br>\n        <a routerLink=\"/product/{{productInfo.productId}}\" *ngIf=\"productInfo.productStatus == 0; else offBlock\"\n           class=\"btn btn-primary btn-lg\"\n        >Get It!</a>\n        <ng-template #offBlock><a class=\"btn btn-secondary btn-lg disabled\">Unavailable</a></ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n<app-pagination  [currentPage]=\"page\" ></app-pagination>\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {User} from \"../../models/User\";\nimport {Router} from \"@angular/router\";\nimport {Observable, Subject} from \"rxjs\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n    selector: 'app-user-detail',\n    templateUrl: './user-detail.component.html',\n    styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n\n\n\n\n    constructor(private userService: UserService,\n                private router: Router) {\n    }\n\n    user= new User();\n\n\n    ngOnInit() {\n        const account = this.userService.currentUserValue.account;\n\n        this.userService.get(account).subscribe( u => {\n            this.user = u;\n            this.user.password = '';\n        }, e => {\n\n        });\n    }\n\n    onSubmit() {\n        this.userService.update(this.user).subscribe(u => {\n            this.userService.nameTerms.next(u.name);\n            let url = '/';\n            if (this.user.role != Role.Customer) {\n                url = '/seller';\n            }\n            this.router.navigateByUrl(url);\n        }, _ => {})\n    }\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Edit Profiles</h1>\n<div style=\"width:40%; margin: 25px auto\" >\n  <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label><b>Email address</b></label>\n        <input readonly [value]=user?.email type=\"email\" class=\"form-control form-control-lg \" disabled id=\"email\"\n               name=\"email\" placeholder=\"Enter email\">\n    </div>\n    <div class=\"form-group\">\n      <label><b>Name</b></label>\n      <input [(ngModel)]=\"user.name\" type=\"text\" class=\"form-control form-control-lg\" id=\"name\" name=\"name\" placeholder=\"Your name\" required #name=\"ngModel\" autofocus>\n      <div  *ngIf=\"name.invalid && (name.dirty || name.touched)\">\n        <div *ngIf=\"name.errors.required\">\n          Name is required.\n        </div>\n        <div *ngIf=\"name.errors.minlength\">\n          Name must be at least 3 characters long.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Password</b></label>\n      <input  [(ngModel)]=\"user.password\" type=\"password\" class=\"form-control form-control-lg\" id=\"password\" name=\"password\" placeholder=\"Password\" minlength=\"3\" required #password=\"ngModel\">\n      <div  *ngIf=\"password.invalid && (password.dirty ||password.touched)\">\n        <div *ngIf=\"password.errors.required\">\n          Password is required.\n        </div>\n        <div *ngIf=\"password.errors.minlength\">\n          Password must be at least 3 characters long.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Phone</b></label>\n      <input [(ngModel)]=\"user.phone\" type=\"text\" class=\"form-control form-control-lg\" id=\"phone\" name=\"phone\" placeholder=\"Phone\" required #phone=\"ngModel\" >\n      <div  *ngIf=\"phone.invalid && (phone.dirty ||phone.touched)\">\n        <div *ngIf=\"phone.errors.required\">\n          Phone is required.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Address</b></label>\n      <input [(ngModel)]=\"user.address\" type=\"text\" class=\"form-control form-control-lg\" id=\"address\" name=\"address\" placeholder=\"Address\" required #address=\"ngModel\">\n      <div  *ngIf=\"address.invalid && (address.dirty ||address.touched)\">\n        <div *ngIf=\"address.errors.required\">\n          Address is required.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!form.form.valid\" >Update</button>\n    </div>\n  </form>\n</div>\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import {ProductInOrder} from \"./ProductInOrder\";\n\nexport class ProductInfo {\n    productId: string;\n    productName: string;\n    productPrice: number;\n    productStock: number;\n    productDescription: string;\n    productIcon: string;\n    productStatus: number; // 0: onsale 1: offsale\n    categoryType: number;\n    createTime: string;\n    updateTime: string;\n\n\n    constructor(productInOrder?: ProductInOrder) {\n        if (productInOrder) {\n            this.productId = productInOrder.productId;\n            this.productName = productInOrder.productName;\n            this.productPrice = productInOrder.productPrice;\n            this.productStock = productInOrder.productStock;\n            this.productDescription = productInOrder.productDescription;\n            this.productIcon = productInOrder.productIcon;\n            this.categoryType = productInOrder.categoryType;\n            this.productStatus = 0;\n        } else {\n            this.productId = '';\n            this.productName = '';\n            this.productPrice = 20;\n            this.productStock = 100;\n            this.productDescription = '';\n            this.productIcon = '';\n            this.categoryType = 0;\n            this.productStatus = 0;\n        }\n    }\n}\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {ProductService} from \"../../services/product.service\";\nimport {JwtResponse} from \"../../response/JwtResponse\";\nimport {Subscription} from \"rxjs\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {CategoryType} from \"../../enum/CategoryType\";\nimport {ProductStatus} from \"../../enum/ProductStatus\";\nimport {ProductInfo} from \"../../models/productInfo\";\nimport {Role} from \"../../enum/Role\";\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n    selector: 'app-product.list',\n    templateUrl: './product.list.component.html',\n    styleUrls: ['./product.list.component.css']\n})\n\nexport class ProductListComponent implements OnInit, OnDestroy {\n\n    closeResult = '';\n    product = new ProductInfo();\n    productId: string;\n    isEdit = false;\n\n    constructor(private userService: UserService,\n                private productService: ProductService,\n                private route: ActivatedRoute,\n                private router: Router,\n                \n                private modalService: NgbModal) {\n    }\n\n    Role = Role;\n    currentUser: JwtResponse;\n    page: any;\n    CategoryType = CategoryType;\n    ProductStatus = ProductStatus;\n    private querySub: Subscription;\n\n    ngOnInit() {\n        this.querySub = this.route.queryParams.subscribe(() => {\n            this.update();\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.querySub.unsubscribe();\n    }\n\n    update() {\n        if (this.route.snapshot.queryParamMap.get('page')) {\n            const currentPage = +this.route.snapshot.queryParamMap.get('page');\n            const size = +this.route.snapshot.queryParamMap.get('size');\n            this.getProds(currentPage, size);\n        } else {\n            this.getProds();\n        }\n    }\n\n    getProds(page: number = 1, size: number = 5) {\n        this.productService.getAllInPage(+page, +size)\n            .subscribe(page => {\n                this.page = page;\n            });\n\n    }\n\n\n    remove(productInfos: ProductInfo[], productInfo) {\n        this.productService.delelte(productInfo).subscribe(_ => {\n                productInfos = productInfos.filter(e => e.productId != productInfo);\n            },\n            err => {\n            });\n    }\n\n    open(content) {\n        this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n          this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n      }\n    \n      private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n          return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n          return 'by clicking on a backdrop';\n        } else {\n          return `with: ${reason}`;\n        }\n      }\n\n      onSubmit() {\n        if (this.productId) {\n            this.update();\n        } else {\n            this.add();\n        }\n    }\n\n    add() {\n        this.productService.create(this.product).subscribe(prod => {\n                if (!prod) throw new Error;\n                //this.router.navigate(['/']);\n            },\n            e => {\n            });\n    }\n\n\n}\n","<h1 align=\"center\" class=\"display-4 \">Products</h1>\n<a *ngIf=\"currentUser?.role == Role.Customer\" style=\"color: inherit\"\n   routerLink=\"/seller/product/new\" class=\"float-right mb-3\"><i class=\"fas fa-plus fa-2x\">Add</i>\n</a>\n<table id=\"table\" class=\"table table-striped text-center\" style=\"width:100%;\">\n    <thead>\n    <tr>\n        <th scope=\"col\">Photo</th>\n        <th scope=\"col\">Code</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Type</th>\n        <th scope=\"col\">Description</th>\n        <th scope=\"col\">Price</th>\n        <th scope=\"col\">Stock</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let productInfo of page?.content\">\n        <th class=\"align-middle\" scope=\"row\">\n            <img height=\"100px\" src=\"{{productInfo.productIcon}}\" alt=\"{{productInfo.productName}}\">\n        </th>\n        <td class=\"align-middle\">{{productInfo.productId}}</td>\n        <td class=\"align-middle\">{{productInfo.productName}}</td>\n        <td class=\"align-middle\">{{CategoryType[productInfo.categoryType]}}</td>\n        <td class=\"align-middle\">{{productInfo.productDescription}}</td>\n        <td class=\"align-middle\">{{productInfo.productPrice | currency}}</td>\n        <td class=\"align-middle\">{{productInfo.productStock}}</td>\n        <td class=\"align-middle\">{{ProductStatus[productInfo.productStatus]}}</td>\n        <td class=\"align-middle\">\n            <a style=\"display: block\" routerLink=\"/seller/product/{{productInfo.productId}}/edit\">\n                Edit</a>\n\n            <a *ngIf=\"currentUser?.role == Role.Customer\" style=\"display: block\"\n               (click)=\"remove(page.content, productInfo.productId)\" routerLink=\"./\">\n                Remove</a>\n        </td>\n\n    </tbody>\n</table>\n<app-pagination [currentPage]=\"page\"></app-pagination>\n\n<ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Add New Cuisine</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n        <!--Id-->\n        <div class=\"form-group\">\n            <label for=\"productId\">Code</label>\n            <input [readOnly]=\"isEdit\" [disabled]=\"isEdit\" [(ngModel)]=\"product.productId\" type=\"text\"\n                   class=\"form-control form-control-lg\" #productIdInput\n                   id=\"productId\" name=\"productId\" required #productId=\"ngModel\">\n            <div *ngIf=\"productIdInput.invalid && (productIdInput.dirty ||productIdInput.touched)\">\n                <div *ngIf=\"productIdInput.errors.required\">\n                    Name is required.\n                </div>\n            </div>\n        </div>\n        <!--Photo-->\n        <div class=\"form-group\">\n            <label>Photo Link</label>\n            <input [(ngModel)]=\"product.productIcon\" type=\"text\" class=\"form-control form-control-lg\" id=\"productIcon\"\n                   name=\"productIcon\" placeholder=\"Photo\">\n        </div>\n\n        <!--Name-->\n        <div class=\"form-group\">\n            <label>Name</label>\n            <input [(ngModel)]=\"product.productName\" type=\"text\" class=\"form-control form-control-lg\" id=\"productName\"\n                   #productName=\"ngModel\"\n                   name=\"productName\" placeholder=\"Name\" required>\n        </div>\n        <div *ngIf=\"productName.invalid && (productName.dirty ||productName.touched)\">\n            <div *ngIf=\"productName.errors.required\">\n                Name is required.\n            </div>\n        </div>\n\n        <!--Category-->\n        <div class=\"form-group\">\n            <label for=\"categoryType\">Category</label>\n            <select class=\"custom-select custom-select-lg \" id=\"categoryType\" name=\"categoryType\"\n                    [(ngModel)]=\"product.categoryType\"\n                    required>\n                <option [ngValue]=0>Meals</option>\n                <option [ngValue]=1>Wraps</option>\n                <option [ngValue]=2>Desert</option>\n                <option [ngValue]=3>Drink</option>\n            </select>\n        </div>\n\n        <!--Description-->\n        <div class=\"form-group\">\n            <label>Description</label>\n            <textarea class=\"form-control form-control-lg text-left\"\n                      id=\"productDescription\" name=\"productDescription\"\n                      placeholder=\"Description\" [(ngModel)]=\"product.productDescription\"></textarea>\n        </div>\n        <!--Price-->\n        <div class=\"form-group\">\n            <label for=\"productPrice\">Price</label>\n            <input class=\"form-control form-control-lg\"\n                   type=\"number\"\n                   id=\"productPrice\"\n                   name=\"productPrice\"\n                   #productPrice=\"ngModel\"\n                   [ngModel]=\"product.productPrice\" (ngModelChange)=\"product.productPrice=$event\"\n                   required>\n            <div *ngIf=\"productPrice.invalid && (productPrice.dirty ||productPrice.touched)\">\n                <div *ngIf=\"productPrice.errors.required\">\n                    Price is required.\n                </div>\n            </div>\n        </div>\n        <!--Stock-->\n        <div class=\"form-group\">\n            <label for=\"productStock\">Stock</label>\n            <input class=\"form-control form-control-lg\"\n                   type=\"number\"\n                   id=\"productStock\"\n                   name=\"productStock\"\n                   min=\"0\" #productStock=\"ngModel\"\n                   [(ngModel)]=\"product.productStock\"\n                   required>\n            <div *ngIf=\"productStock.invalid && (productStock.dirty ||productStock.touched)\">\n                <div *ngIf=\"productStock.errors.required\">\n                    Stock is required.\n                </div>\n            </div>\n        </div>\n        <!--Status-->\n        <div class=\"form-group\">\n            <label for=\"productStatus\">Status</label>\n            <select class=\"custom-select custom-select-lg \" id=\"productStatus\" name=\"productStatus\" required\n                    [(ngModel)]=\"product.productStatus\">\n                <option [ngValue]=0>Available</option>\n                <option [ngValue]=1>Unavailable</option>\n            </select>\n        </div>\n        \n        <div class=\"form-group\">\n            <button type=\"submit\" (click)=\"modal.close('Save click')\" [disabled]=\"!form.form.valid\" class=\"btn btn-lg btn-primary btn-block\">Submit</button>\n        </div>\n    </form>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Save</button>\n    </div>\n  </ng-template>\n  \n  <button class=\"btn btn-lg btn-outline-primary\" (click)=\"open(content)\">Save New Cuisine</button>\n  \n  <hr>\n  \n  <pre>{{ closeResult }}</pre>\n  \n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {catchError} from \"rxjs/operators\";\nimport {Observable, of} from \"rxjs\";\nimport {Order} from \"../models/Order\";\nimport {apiUrl} from \"../../environments/environment\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrderService {\n\n    private orderUrl = `${apiUrl}/order`;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getPage(page = 1, size = 10): Observable<any> {\n        return this.http.get(`${this.orderUrl}?page=${page}&size=${size}`).pipe();\n    }\n\n    show(id): Observable<Order> {\n        return this.http.get<Order>(`${this.orderUrl}/${id}`).pipe(\n            catchError(_ => of(null))\n        );\n    }\n\n    cancel(id): Observable<Order> {\n        return this.http.patch<Order>(`${this.orderUrl}/cancel/${id}`, null).pipe(\n            catchError(_ => of(null))\n        );\n    }\n\n    finish(id): Observable<Order> {\n        return this.http.patch<Order>(`${this.orderUrl}/finish/${id}`, null).pipe(\n            catchError(_ => of(null))\n        );\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {OrderService} from \"../../services/order.service\";\nimport {Order} from \"../../models/Order\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n    selector: 'app-order-detail',\n    templateUrl: './order-detail.component.html',\n    styleUrls: ['./order-detail.component.css']\n})\nexport class OrderDetailComponent implements OnInit {\n\n    constructor(private orderService: OrderService,\n                private route: ActivatedRoute) {\n    }\n\n    order$: Observable<Order>;\n\n    ngOnInit() {\n        // this.items$ = this.route.paramMap.pipe(\n        //     map(paramMap =>paramMap.get('id')),\n        //     switchMap((id:string) => this.orderService.show(id))\n        // )\n        this.order$ = this.orderService.show(this.route.snapshot.paramMap.get('id'));\n    }\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Order Detail</h1>\n<table class=\"table table-striped text-center\">\n    <thead>\n    <tr>\n        <th scope=\"col\">Photo</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Description</th>\n        <th scope=\"col\">Price</th>\n        <th scope=\"col\">Quantity</th>\n        <th scope=\"col\">Subtotal</th>\n\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let item of (order$ | async)?.products\">\n        <th class=\"align-middle\" scope=\"row\">\n            <a routerLink=\"/seller/product/{{item.productId}}/edit\"><img height=\"100px\" src=\"{{item.productIcon}}\"\n                                                                         alt=\"{{item.productName}}\"></a>\n        </th>\n        <td class=\"align-middle\"><a routerLink=\"/seller/product/{{item.productId}}/edit\">{{item.productName}}</a></td>\n        <td class=\"align-middle\">{{item.productDescription}}</td>\n        <td class=\"align-middle\">{{item.productPrice | currency}}</td>\n        <td class=\"align-middle\">{{item.count}}</td>\n        <td class=\"align-middle\">{{(item.productPrice * item.count | currency)}}</td>\n    </tr>\n    </tbody>\n</table>\n<h5 style=\"display: inline\" class=\"float-right\">Total: {{(order$ | async)?.orderAmount | currency}}</h5>\n","import {Component, OnInit} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {User} from \"../../models/User\";\nimport {UserService} from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  user: User;\n\n  constructor( private location: Location,\n               private userService: UserService,\n               private router: Router) {\n    this.user = new User();\n\n  }\n\n\n\n  ngOnInit() {\n\n\n  }\n  onSubmit() {\n    this.userService.signUp(this.user).subscribe(u => {\n      this.router.navigate(['/login']);\n    },\n        e => {});\n  }\n\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">Sign Up</h1>\n<div style=\"width:40%; margin: 25px auto\" >\n  <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label><b>Email address</b></label>\n      <input [(ngModel)]=\"user.email\" type=\"email\" class=\"form-control form-control-lg\" id=\"email\" name=\"email\" placeholder=\"Enter email\" email required autofocus  #email=\"ngModel\">\n      <div  *ngIf=\"email.invalid && (email.dirty ||email.touched)\" >\n          <div *ngIf=\"email.errors.required\" >\n              Email is required.\n          </div>\n          <div *ngIf=\"email.errors.email\">\n              Invalid Email.\n          </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Name</b></label>\n      <input [(ngModel)]=\"user.name\" type=\"text\" class=\"form-control form-control-lg\" id=\"name\" name=\"name\" placeholder=\"Your name\" required #name=\"ngModel\">\n        <div  *ngIf=\"name.invalid && (name.dirty ||name.touched)\">\n            <div *ngIf=\"name.errors.required\">\n                Name is required.\n            </div>\n            <div *ngIf=\"name.errors.minlength\">\n                Name must be at least 3 characters long.\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Password</b></label>\n      <input  [(ngModel)]=\"user.password\" type=\"password\" class=\"form-control form-control-lg\" id=\"password\" name=\"password\" placeholder=\"Password\" minlength=\"3\" required #password=\"ngModel\">\n        <div  *ngIf=\"password.invalid && (password.dirty ||password.touched)\">\n            <div *ngIf=\"password.errors.required\">\n                Password is required.\n            </div>\n            <div *ngIf=\"password.errors.minlength\">\n                Password must be at least 3 characters long.\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Phone</b></label>\n      <input [(ngModel)]=\"user.phone\" type=\"text\" class=\"form-control form-control-lg\" id=\"phone\" name=\"phone\" placeholder=\"Phone\" required #phone=\"ngModel\" >\n        <div  *ngIf=\"phone.invalid && (phone.dirty ||phone.touched)\">\n            <div *ngIf=\"phone.errors.required\">\n                Phone is required.\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n      <label><b>Address</b></label>\n      <input [(ngModel)]=\"user.address\" type=\"text\" class=\"form-control form-control-lg\" id=\"address\" name=\"address\" placeholder=\"Address\" required #address=\"ngModel\">\n        <div  *ngIf=\"address.invalid && (address.dirty ||address.touched)\">\n            <div *ngIf=\"address.errors.required\">\n                Address is required.\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n      <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"!form.form.valid\" >Sign Up</button>\n    </div>\n  </form>\n</div>\n\n","export enum ProductStatus {\n    \"Available\", \"Unavailable\"\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {apiUrl} from '../../environments/environment';\nimport {BehaviorSubject, Observable, of, Subject} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport {JwtResponse} from '../response/JwtResponse';\nimport {CookieService} from 'ngx-cookie-service';\nimport {User} from \"../models/User\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n\n    private currentUserSubject: BehaviorSubject<JwtResponse>;\n    public currentUser: Observable<JwtResponse>;\n    public nameTerms = new Subject<string>();\n    public name$ = this.nameTerms.asObservable();\n    constructor(private http: HttpClient,\n                private cookieService: CookieService) {\n        const memo = localStorage.getItem('currentUser');\n        this.currentUserSubject = new BehaviorSubject<JwtResponse>(JSON.parse(memo));\n        this.currentUser = this.currentUserSubject.asObservable();\n        cookieService.set('currentUser', memo);\n    }\n\n    get currentUserValue() {\n        return this.currentUserSubject.value;\n    }\n\n\n    login(loginForm): Observable<JwtResponse> {\n        const url = `${apiUrl}/login`;\n        return this.http.post<JwtResponse>(url, loginForm).pipe(\n            tap(user => {\n                if (user && user.token) {\n                    this.cookieService.set('currentUser', JSON.stringify(user));\n                    if (loginForm.remembered) {\n                        localStorage.setItem('currentUser', JSON.stringify(user));\n                    }\n                    console.log((user.name));\n                    this.nameTerms.next(user.name);\n                    this.currentUserSubject.next(user);\n                    return user;\n                }\n            }),\n            catchError(this.handleError('Login Failed', null))\n        );\n    }\n\n    logout() {\n        this.currentUserSubject.next(null);\n        localStorage.removeItem('currentUser');\n        this.cookieService.delete('currentUser');\n    }\n\n    signUp(user: User): Observable<User> {\n        const url = `${apiUrl}/register`;\n        return this.http.post<User>(url, user);\n    }\n\n    update(user: User): Observable<User> {\n        const url = `${apiUrl}/profile`;\n        return this.http.put<User>(url, user);    }\n\n    get(email: string): Observable<User> {\n        const url = `${apiUrl}/profile/${email}`;\n        return this.http.get<User>(url);\n    }\n\n    /**\n     * Handle Http operation that failed.\n     * Let the app continue.\n     * @param operation - name of the operation that failed\n     * @param result - optional value to return as the observable result\n     */\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            console.log(error); // log to console instead\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnInit {\n\n  @Input() currentPage: any;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  counter(i = 1) {\n    return new Array(i);\n  }\n}\n","<div class=\"col-md-12 column\">\n  <ul class=\"pagination justify-content-end\">\n      <li class=\"page-item\" *ngIf=\"currentPage?.number > 0; else prev\">\n          <a\n                  class=\"page-link\"\n                  [routerLink]=\"['./']\"\n                  [queryParams]=\"{ page: currentPage?.number, size: currentPage?.size }\"\n          >Previous</a\n          >\n    </li>\n      <ng-template #prev>\n          <li class=\"page-item  disabled\"><a class=\"page-link\">Previous</a></li>\n      </ng-template>\n\n      <ng-container *ngFor=\"let item of counter(currentPage?.totalPages); let i = index\">\n          <li class=\"page-item\" *ngIf=\"currentPage && currentPage.number != i; else active\">\n            <a class=\"page-link \"\n                    routerLink=\"./\"\n                    [queryParams]=\"{ page: i + 1, size: currentPage?.size }\"\n            >{{ i + 1 }}</a\n            >\n        </li>\n          <ng-template #active>\n              <li\n                      class=\"page-item active \"\n\n              >\n                  <button class=\"page-link \" disabled>{{ i + 1 }}</button>\n              </li>\n          </ng-template>\n      </ng-container>\n\n      <li\n              class=\"page-item\"\n              *ngIf=\"currentPage?.number + 1 < currentPage?.totalPages; else next\"\n      >\n          <a\n                  class=\"page-link\"\n                  [routerLink]=\"['./']\"\n                  [queryParams]=\"{\n          page: currentPage?.number + 2,\n          size: currentPage?.size\n        }\"\n          >Next</a\n          >\n    </li>\n    <ng-template #next>\n        <li class=\"page-item disabled \"><a class=\"page-link\">Next</a></li>\n    </ng-template>\n  </ul>\n</div>\n","import {AfterContentChecked, Component, OnDestroy, OnInit} from '@angular/core';\nimport {CartService} from '../../services/cart.service';\nimport {Subject, Subscription} from 'rxjs';\nimport {UserService} from '../../services/user.service';\nimport {JwtResponse} from '../../response/JwtResponse';\nimport {ProductInOrder} from '../../models/ProductInOrder';\nimport {debounceTime, switchMap} from 'rxjs/operators';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Role} from '../../enum/Role';\n\n@Component({\n    selector: 'app-cart',\n    templateUrl: './cart.component.html',\n    styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit, OnDestroy, AfterContentChecked {\n\n    constructor(private cartService: CartService,\n                private userService: UserService,\n                private router: Router) {\n        this.userSubscription = this.userService.currentUser.subscribe(user => this.currentUser = user);\n    }\n\n    productInOrders = [];\n    total = 0;\n    currentUser: JwtResponse;\n    userSubscription: Subscription;\n\n    private updateTerms = new Subject<ProductInOrder>();\n    sub: Subscription;\n\n    static validateCount(productInOrder) {\n        const max = productInOrder.productStock;\n        if (productInOrder.count > max) {\n            productInOrder.count = max;\n        } else if (productInOrder.count < 1) {\n            productInOrder.count = 1;\n        }\n        console.log(productInOrder.count);\n    }\n\n    ngOnInit() {\n        this.cartService.getCart().subscribe(prods => {\n            this.productInOrders = prods;\n        });\n\n        this.sub = this.updateTerms.pipe(\n            // wait 300ms after each keystroke before considering the term\n            debounceTime(300),\n            //\n            // ignore new term if same as previous term\n            // Same Object Reference, not working here\n            //  distinctUntilChanged((p: ProductInOrder, q: ProductInOrder) => p.count === q.count),\n            //\n            // switch to new search observable each time the term changes\n            switchMap((productInOrder: ProductInOrder) => this.cartService.update(productInOrder))\n        ).subscribe(prod => {\n                if (prod) { throw new Error(); }\n            },\n            _ => console.log('Update Item Failed'));\n    }\n\n    ngOnDestroy() {\n        if (!this.currentUser) {\n            this.cartService.storeLocalCart();\n        }\n        this.userSubscription.unsubscribe();\n    }\n\n    ngAfterContentChecked() {\n        this.total = this.productInOrders.reduce(\n            (prev, cur) => prev + cur.count * cur.productPrice, 0);\n    }\n\n    addOne(productInOrder) {\n        productInOrder.count++;\n        CartComponent.validateCount(productInOrder);\n        if (this.currentUser) { this.updateTerms.next(productInOrder); }\n    }\n\n    minusOne(productInOrder) {\n        productInOrder.count--;\n        CartComponent.validateCount(productInOrder);\n        if (this.currentUser) { this.updateTerms.next(productInOrder); }\n    }\n\n    onChange(productInOrder) {\n        CartComponent.validateCount(productInOrder);\n        if (this.currentUser) { this.updateTerms.next(productInOrder); }\n    }\n\n\n    remove(productInOrder: ProductInOrder) {\n        this.cartService.remove(productInOrder).subscribe(\n            success => {\n               this.productInOrders = this.productInOrders.filter(e => e.productId !== productInOrder.productId);\n                console.log('Cart: ' + this.productInOrders);\n            },\n            _ => console.log('Remove Cart Failed'));\n    }\n\n    checkout() {\n        if (!this.currentUser) {\n            this.router.navigate(['/login'], {queryParams: {returnUrl: this.router.url}});\n        } else if (this.currentUser.role !== Role.Customer) {\n            this.router.navigate(['/seller']);\n        } else {\n            this.cartService.checkout().subscribe(\n                _ => {\n                    this.productInOrders = [];\n                },\n                error1 => {\n                    console.log('Checkout Cart Failed');\n                });\n            this.router.navigate(['/']);\n        }\n\n    }\n}\n\n","<h1 align=\"center\" class=\"display-4 mb-5\">My Cart</h1>\n\n<!--Cart Detail Table-->\n<table class=\"table table-striped text-center\">\n    <thead>\n    <tr>\n        <th scope=\"col\">Photo</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Price</th>\n        <th scope=\"col\">Quantity</th>\n        <th scope=\"col\">Subtotal</th>\n        <th scope=\"col\">Action</th>\n\n    </tr>\n    </thead>\n    <tbody>\n\n    <tr *ngFor=\"let productInOrder of productInOrders\">\n        <th class=\"align-middle\" scope=\"row\">\n            <a routerLink=\"/product/{{productInOrder.productId}}\"><img height=\"100px\"\n                                                                       src=\"{{productInOrder.productIcon}}\"\n                                                                       alt=\"{{productInOrder.productName}}\"></a>\n        </th>\n        <td class=\"align-middle\"><a\n                routerLink=\"/product/{{productInOrder.productId}}\">{{productInOrder.productName}}</a></td>\n        <td class=\"align-middle\">{{productInOrder.productPrice | currency}}</td>\n\n        <td class=\"align-middle\">\n            <a (click)=\"minusOne(productInOrder)\"><i class=\"fa fa-minus\"></i></a>\n            <input min=\"1\" id=\"{{productInOrder.productId}}\"\n                   [max]=productInOrder.productStock\n                   [(ngModel)]=\"productInOrder.count\"\n                   (change)=\"onChange(productInOrder)\"\n                   size=\"5\"\n                   type=\"number\"\n                   required\n                   name='count'>\n            <a (click)=\"addOne(productInOrder)\"> <i class=\"fa fa-plus\"></i></a>\n        </td>\n\n        <td class=\"align-middle\">{{productInOrder.productPrice * productInOrder.count|currency}}</td>\n        <td class=\"align-middle\">\n            <a (click)=\"remove(productInOrder)\" routerLink=\"./\">Remove</a>\n        </td>\n\n    </tr>\n\n    </tbody>\n</table>\n\n<div *ngIf=\"productInOrders?.length > 0; else empty\">\n    <h5 style=\"display: inline;\">Total: {{total | currency}}</h5>\n    <button (click)=\"checkout()\" class=\"btn btn-warning float-right\">Checkout</button>\n</div>\n<ng-template #empty>\n    <h4 class=\"text-muted text-center\">Cart is empty. Go to get something! :)</h4>\n</ng-template>\n\n<section class=\"pt-5 pb-5\">\n    <div  *ngIf=\"productInOrders?.length > 0; else empty\"  class=\"container\">\n      <div class=\"row w-100\">\n          <div class=\"col-lg-12 col-md-12 col-12\">\n              <h3 class=\"display-5 mb-2 text-center\">Shopping Cart</h3>\n              <p class=\"mb-5 text-center\">\n                  <i class=\"text-danger font-weight-bold\">{{productInOrders.length}}</i> item in your cart</p>\n              <table id=\"shoppingCart\" class=\"table table-condensed table-responsive\">\n                  <thead>\n                      <tr>\n                          <th style=\"width:60%\">Product</th>\n                          <th style=\"width:12%\">Price</th>\n                          <th style=\"width:10%\">Quantity</th>\n                          <th style=\"width:16%\"></th>\n                      </tr>\n                  </thead>\n                  <tbody>\n                      <tr *ngFor=\"let productInOrder of productInOrders\">\n                          <td data-th=\"Product\">\n                              <div class=\"row\">\n                                  <div class=\"col-md-3 text-left\">\n                                      <img src=\"{{productInOrder.productIcon}}\" alt=\"\" class=\"img-fluid d-none d-md-block rounded mb-2 shadow \">\n                                  </div>\n                                  <div class=\"col-md-9 text-left mt-sm-2\">\n                                      <h4>{{productInOrder.productName}}</h4>\n                                      <p class=\"font-weight-light\">{{productInOrder.productDescription}}</p>\n                                  </div>\n                              </div>\n                          </td>\n                          <td data-th=\"Price\">{{productInOrder.productPrice | currency : 'INR'}}</td>\n                          <td data-th=\"Quantity\">\n                           <!-- <a (click)=\"minusOne(productInOrder)\"><i class=\"fa fa-minus\"></i></a>-->\n                            <input type=\"number\" class=\"form-control form-control-lg text-center\" min=\"1\" id=\"{{productInOrder.productId}}\"\n                                   [max]=productInOrder.productStock\n                                   [(ngModel)]=\"productInOrder.count\"\n                                   (change)=\"onChange(productInOrder)\"\n                                   size=\"5\"\n                                   type=\"number\"\n                                   required\n                                   name='count'>\n                            <!--<a (click)=\"addOne(productInOrder)\"> <i class=\"fa fa-plus\"></i></a> -->\n                          </td>\n                          <td class=\"actions\" data-th=\"\">\n                              <div class=\"text-right\">\n                                  <button class=\"btn btn-white border-secondary bg-white btn-md mb-2\">\n                                      <i class=\"fas fa-sync\"></i>\n                                  </button>\n                                  <button (click)=\"remove(productInOrder)\" routerLink=\"./\" class=\"btn btn-white border-secondary bg-white btn-md mb-2\">\n                                      <i class=\"fas fa-trash\"></i>\n                                  </button>\n                              </div>\n                          </td>\n                      </tr>\n                     \n                  </tbody>\n              </table>\n              <div class=\"float-right text-right\">\n                  <h4>Subtotal:</h4>\n                  <h1>{{total | currency :'INR'}}</h1>\n              </div>\n          </div>\n      </div>\n      <div *ngIf=\"productInOrders?.length > 0; else empty\" class=\"row mt-4 d-flex align-items-center\">\n          <div class=\"col-sm-6 order-md-2 text-right\">\n              <a (click)=\"checkout()\" class=\"btn btn-primary mb-4 btn-lg pl-5 pr-5\">Checkout</a>\n          </div>\n          <div class=\"col-sm-6 mb-3 mb-m-1 order-md-1 text-md-left\">\n              <a href=\"product\">\n                  <i class=\"fas fa-arrow-left mr-2\"></i> Continue Shopping</a>\n          </div>\n      </div>\n  </div>\n  </section>\n\n\n","export enum OrderStatus {\n    \"New\",\n    \"Finished\",\n    \"Cenceled\"\n}\n","import {ProductInfo} from \"./productInfo\";\n\nexport class ProductInOrder {\n    productId: string;\n    productName: string;\n    productPrice: number;\n    productStock: number;\n    productDescription: string;\n    productIcon: string;\n    categoryType: number;\n    count: number;\n\n    constructor(productInfo:ProductInfo, quantity = 1){\n        this.productId = productInfo.productId;\n        this.productName = productInfo.productName;\n        this.productPrice = productInfo.productPrice;\n        this.productStock = productInfo.productStock;\n        this.productDescription = productInfo.productDescription;;\n        this.productIcon = productInfo.productIcon;\n        this.categoryType = productInfo.categoryType;\n        this.count = quantity;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CardComponent} from './pages/card/card.component';\nimport {LoginComponent} from './pages/login/login.component';\nimport {SignupComponent} from './pages/signup/signup.component';\nimport {DetailComponent} from './pages/product-detail/detail.component';\nimport {CartComponent} from './pages/cart/cart.component';\nimport {AuthGuard} from \"./_guards/auth.guard\";\nimport {OrderComponent} from \"./pages/order/order.component\";\nimport {OrderDetailComponent} from \"./pages/order-detail/order-detail.component\";\nimport {ProductListComponent} from \"./pages/product-list/product.list.component\";\nimport {UserDetailComponent} from \"./pages/user-edit/user-detail.component\";\nimport {ProductEditComponent} from \"./pages/product-edit/product-edit.component\";\nimport {Role} from \"./enum/Role\";\n\nconst routes: Routes = [\n    {path: '', redirectTo: '/product', pathMatch: 'full'},\n    {path: 'product/:id', component: DetailComponent},\n    {path: 'product/:keyword', component: CardComponent},\n    {path: 'category/:id', component: CardComponent},\n    {path: 'product', component: CardComponent},\n    {path: 'category', component: CardComponent},\n    {path: 'login', component: LoginComponent},\n    {path: 'logout', component: LoginComponent},\n    {path: 'register', component: SignupComponent},\n    {path: 'cart', component: CartComponent},\n    {path: 'success', component: SignupComponent},\n    {path: 'order/:id', component: OrderDetailComponent, canActivate: [AuthGuard]},\n    {path: 'order', component: OrderComponent, canActivate: [AuthGuard]},\n    {path: 'seller', redirectTo: 'seller/product', pathMatch: 'full'},\n    {\n        path: 'seller/product',\n        component: ProductListComponent,\n        canActivate: [AuthGuard],\n        data: {roles: [Role.Manager, Role.Employee]}\n    },\n    {\n        path: 'profile',\n        component: UserDetailComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'seller/product/:id/edit',\n        component: ProductEditComponent,\n        canActivate: [AuthGuard],\n        data: {roles: [Role.Manager, Role.Employee]}\n    },\n    {\n        path: 'seller/product/:id/new',\n        component: ProductEditComponent,\n        canActivate: [AuthGuard],\n        data: {roles: [Role.Employee]}\n    },\n\n];\n\n@NgModule({\n    declarations: [],\n    imports: [\n        RouterModule.forRoot(routes)//{onSameUrlNavigation: 'reload'}\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Role} from \"../enum/Role\";\n\nexport class User {\n\n    email: string;\n\n    password: string;\n\n    name: string;\n\n    phone: string;\n\n    address: string;\n\n    active: boolean;\n\n    role: string;\n\n    constructor(){\n        this.active = true;\n        this.role = Role.Customer;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ProductService} from '../../services/product.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CartService} from '../../services/cart.service';\nimport {CookieService} from 'ngx-cookie-service';\nimport {ProductInOrder} from '../../models/ProductInOrder';\nimport {ProductInfo} from '../../models/productInfo';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n  title: string;\n  count: number;\n  productInfo: ProductInfo;\n\n  constructor(\n      private productService: ProductService,\n      private cartService: CartService,\n      private cookieService: CookieService,\n      private route: ActivatedRoute,\n      private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.getProduct();\n    this.title = 'Product Detail';\n    this.count = 1;\n  }\n\n  // ngOnChanges(changes: SimpleChanges): void {\n  //   // Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n  //   // Add '${implements OnChanges}' to the class.\n  //   console.log(changes);\n  //   if (this.item.quantity in changes) {\n\n  //   }\n  // }\n\n  getProduct(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.productService.getDetail(id).subscribe(\n        prod => {\n          this.productInfo = prod;\n        },\n        _ => console.log('Get Cart Failed')\n    );\n  }\n\n  addToCart() {\n    this.cartService\n        .addItem(new ProductInOrder(this.productInfo, this.count))\n        .subscribe(\n            res => {\n              if (!res) {\n                console.log('Add Cart failed' + res);\n                throw new Error();\n              }\n              this.router.navigateByUrl('/cart');\n            },\n            _ => console.log('Add Cart Failed')\n        );\n  }\n\n  validateCount() {\n    console.log('Validate');\n    const max = this.productInfo.productStock;\n    if (this.count > max) {\n      this.count = max;\n    } else if (this.count < 1) {\n      this.count = 1;\n    }\n  }\n}\n","<h1 align=\"center\" class=\"display-4 mb-5\">{{title}}</h1>\n<div class=\"row text-center justify-content-center\">\n  <div class=\"col-lg-6 \">\n    <div class=\"card mb-4 \">\n      <img height=\"60%\" class=\"card-img-top\" src=\"{{productInfo?.productIcon}}\">\n      <div class=\"card-body\">\n        <h4 class=\"card-title \">{{productInfo?.productName}}</h4>\n        <form name=\"form\" #form='ngForm' (ngSubmit)=\"productInfo?.productStatus == 0 && addToCart()\">\n          <div class=\"text-left\">\n            <input hidden name=\"productId\" [value]=productInfo?.productId>\n            <p class=\"card-test\"><strong>Description: </strong>{{productInfo?.productDescription}}</p>\n            <p class=\"card-text\">\n              <strong>Price: </strong>\n              <label id=\"price\">{{productInfo?.productPrice | currency}}</label>\n            </p>\n            <p class=\"card-text\"><strong>Stock: </strong>{{productInfo?.productStock}}</p>\n\n            <label class=\"card-text\">\n              <strong>Quantity: </strong>\n              <input [(ngModel)]=count\n                     (change)=\"validateCount()\"\n                     type=\"number\"\n                     name=\"count\"\n                     required\n                     min=\"1\"\n                     [max]=productInfo?.productStock\n              >\n            </label>\n\n\n            <p class=\"card-text\"><strong>Subtotal: </strong>\n              <label id=\"subtotal\">{{count * productInfo?.productPrice | currency}}</label>\n            </p>\n          </div>\n          <button type=\"submit\" [disabled]=\"!form.form.valid\" *ngIf=\"productInfo?.productStatus == 0; else offBlock\"\n                  class=\"btn btn-primary btn-lg\"\n          >Add to Cart\n          </button>\n          <ng-template #offBlock><a class=\"btn btn-secondary btn-lg disabled\">Unavailable</a></ng-template>\n        </form>\n\n      </div>\n    </div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {UserService} from \"../services/user.service\";\nimport {Observable, throwError} from \"rxjs\";\nimport {catchError} from \"rxjs/operators\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private userService: UserService,\n                private router: Router) {\n    }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        // auto logout if 401 response returned from api\n        this.userService.logout();\n          this.router.navigate(['/login']);\n      }\n\n        const error = err.error || err.statusText;\n      return throwError(error);\n    }))\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}